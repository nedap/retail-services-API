<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.nedap.retail.services</groupId>
        <artifactId>api</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>

    <artifactId>examples</artifactId>
    <packaging>jar</packaging>
    <name>Nedap Retail API examples</name>
    <version>2.0-SNAPSHOT</version>
    <description>Examples on how to use the Nedap Retail APIs</description>
    <url>http://www.nedap-retail.com/</url>

    <dependencies>
        <dependency>
            <groupId>com.nedap.retail.client</groupId>
            <artifactId>api-client</artifactId>
            <version>2.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>1.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-nop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>4.1</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-version}</version>
                <configuration>
                    <source>${java-version}</source>
                    <target>${java-version}</target>
                </configuration>
            </plugin>

            <!--
              Usage:
              mvn package

              This plugin provides the capability to package the artifact in an uber-jar, including its dependencies and
              to shade - i.e. rename - the packages of some of the dependencies.
          
              - Produce a pom.xml file which doesn’t include dependencies for the libraries whose contents are
                included in the fat JAR.
              - Exclude all digital signatures from signed JARs. If you don’t, then Java considers the signature
                invalid and won’t load or run your JAR file.
              - Collate the various META-INF/services entries in the JARs instead of overwriting them. (Jersey doesn’t
                work without those.)
              - Set com.nedap.retail.services.examples.App as the JAR’s MainClass. This will allow you to run
                the JAR using java -jar.
  
              See also http://dropwizard.codahale.com/getting-started/
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.4.1</version>
                <configuration>
                    <transformers>
                        <!--
                          Collate the various META-INF/services entries in the JARs instead of overwriting them.
                          (Jersey doesn’t work without those.)
                        -->
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                            <mainClass>com.nedap.retail.services.examples.App</mainClass>
                        </transformer>
                    </transformers>
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
              Usage:
              mvn compile exec:java -Dexec.args="-clientid <CLIENTID> -secret <SECRET>"
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.4.0</version>
                <configuration>
                    <executable>java</executable>
                    <mainClass>com.nedap.retail.services.examples.App</mainClass>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-artifact</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${project.artifactId}</artifactId>
                                    <version>${project.version}</version>
                                    <type>${project.packaging}</type>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>../target</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>