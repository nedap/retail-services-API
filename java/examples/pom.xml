<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.nedap.retail.services</groupId>
        <artifactId>api</artifactId>
        <version>1.48-SNAPSHOT</version>
    </parent>

    <artifactId>examples</artifactId>
    <packaging>jar</packaging>
    <name>Nedap Retail API examples</name>
    <description>Examples on how to use the Nedap Retail APIs</description>
    <url>http://www.nedap-retail.com/</url>

    <properties>
        <swagger-core-version>1.5.9</swagger-core-version>
        <jersey-version>2.22.2</jersey-version>
        <jackson-version>2.7.5</jackson-version>
        <jodatime-version>2.9.4</jodatime-version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.nedap.retail.services</groupId>
            <artifactId>messages</artifactId>
            <version>1.48-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>1.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-nop</artifactId>
            <version>${slf4j-version}</version>
        </dependency>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger-core-version}</version>
        </dependency>

        <!-- HTTP client: jersey-client -->
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
            <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey-version}</version>
        </dependency>

        <!-- JSON processing: jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson-version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson-version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
            <version>${jackson-version}</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${jodatime-version}</version>
        </dependency>

        <!-- Base64 encoding that works in both JVM and Android -->
        <dependency>
            <groupId>com.brsanthu</groupId>
            <artifactId>migbase64</artifactId>
            <version>2.2</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-version}</version>
                <configuration>
                    <source>${java-version}</source>
                    <target>${java-version}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-codegen-maven-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/swagger.json</inputSpec>
                            <language>java</language>
                            <apiPackage>com.nedap.retail.client.api</apiPackage>
                            <modelPackage>com.nedap.retail.client.model</modelPackage>
                            <configOptions>
                                <library>jersey2</library>
                                <dateLibrary>joda</dateLibrary>
                            </configOptions>
                            <output>target/generated-sources/swagger</output>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <executions>
                    <execution>
                        <id>clean-additional-generated-files</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>${project.build.directory}/generated-sources/swagger</directory>
                                    <excludes>
                                        <exclude>src/main/java/**</exclude>
                                    </excludes>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
              Usage:
              mvn package

              This plugin provides the capability to package the artifact in an uber-jar, including its dependencies and
              to shade - i.e. rename - the packages of some of the dependencies.
          
              - Produce a pom.xml file which doesn’t include dependencies for the libraries whose contents are
                included in the fat JAR.
              - Exclude all digital signatures from signed JARs. If you don’t, then Java considers the signature
                invalid and won’t load or run your JAR file.
              - Collate the various META-INF/services entries in the JARs instead of overwriting them. (Jersey doesn’t
                work without those.)
              - Set com.nedap.retail.services.examples.App as the JAR’s MainClass. This will allow you to run
                the JAR using java -jar.
  
              See also http://dropwizard.codahale.com/getting-started/
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.4.1</version>
                <configuration>
                    <transformers>
                        <!--
                          Collate the various META-INF/services entries in the JARs instead of overwriting them.
                          (Jersey doesn’t work without those.)
                        -->
                        <transformer
                                implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                        <transformer
                                implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                            <mainClass>com.nedap.retail.services.examples.App</mainClass>
                        </transformer>
                    </transformers>
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
              Usage:
              mvn compile exec:java -Dexec.args="-clientid <CLIENTID> -secret <SECRET>"
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.4.0</version>
                <configuration>
                    <executable>java</executable>
                    <mainClass>com.nedap.retail.services.examples.App</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
