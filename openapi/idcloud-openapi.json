{
  "swagger" : "2.0",
  "info" : {
    "description" : "!D Cloud is an RFID integration platform for retail stores. While we provide core functionality for retail\n                                        companies, a lot of functionality can be added or extended by 3rd party developers. We encourage you to do so!",
    "version" : "20180713",
    "title" : "!D Cloud API",
    "contact" : {
      "url" : "https://developer.nedap-idcloud.com/",
      "email" : "support-idcloud@nedap.com"
    },
    "license" : {
      "name" : "The MIT License (MIT)",
      "url" : "https://github.com/nedap/retail-services-API/blob/master/LICENSE"
    }
  },
  "host" : "api.nedapretail.com",
  "tags" : [ {
    "name" : "ApprovedDifferenceList"
  }, {
    "name" : "Article"
  }, {
    "name" : "DifferenceList"
  }, {
    "name" : "Epcis"
  }, {
    "name" : "ErpStock"
  }, {
    "name" : "Refill"
  }, {
    "name" : "RfidCount"
  }, {
    "name" : "RfidStock"
  }, {
    "name" : "Shipment"
  }, {
    "name" : "Transaction"
  }, {
    "name" : "Workflow"
  }, {
    "name" : "Kpi"
  }, {
    "name" : "Organization"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/transaction/v1/sell" : {
      "post" : {
        "tags" : [ "Transaction" ],
        "summary" : "Mark an item as sold",
        "description" : "Mark an item as sold to disable EAS alarms and update stock status.",
        "operationId" : "sellItem",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Information about the item and its new state, exactly one of 'epc_uri', 'epc_hex' or 'gs1_elementstring' should be supplied",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SellRequest"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad request"
          },
          "403" : {
            "description" : "Access denied"
          },
          "500" : {
            "description" : "Internal server error"
          }
		},
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Transaction API"
    },
    "/transaction/v1/return" : {
      "post" : {
        "tags" : [ "Transaction" ],
        "summary" : "Marks an item as returned",
        "description" : "Mark an item as returned to enable EAS alarms and update stock status.",
        "operationId" : "returnItem",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Information about the item and its new state, exactly one of 'epc_uri', 'epc_hex' or 'gs1_elementstring' should be supplied",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReturnRequest"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad request"
          },
          "403" : {
            "description" : "Access denied"
          },
          "500" : {
            "description" : "Internal server error"
          }
		},
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Transaction API"
    },
    "/approved_difference_list/v1/export" : {
      "get" : {
        "tags" : [ "ApprovedDifferenceList" ],
        "summary" : "Export approved difference list",
        "description" : "Exports an approved difference list, using the approved difference list identifier. This endpoint returns the approved difference list with only one quantity per GTIN: the RFID quantity if the difference for that GTIN has been approved, otherwise the ERP quantity. This endpoint returns all GTINs, even the ones where RFID and ERP quantities are equal.",
        "operationId" : "exportApprovedDifferenceList",
        "produces" : [ "application/json", "application/csv", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Approved difference list identifier.",
          "required" : true,
          "type" : "string",
          "format" : "uuid",
          "x-example" : "96fb929a-80a7-4ddf-ac42-f153838383bb"
        }, {
          "name" : "include_articles",
          "in" : "query",
          "description" : "Whether to include article details like name, size, etc. in the response.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "accept",
          "in" : "header",
          "description" : "Type of file to return.",
          "required" : false,
          "type" : "string",
          "enum" : [ "application/json", "application/csv", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApprovedDifferenceListExportResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Approved Difference List API"
    },
    "/approved_difference_list/v1/list" : {
      "get" : {
        "tags" : [ "ApprovedDifferenceList" ],
        "summary" : "List approved difference list summaries",
        "description" : "Retrieves a list of approved difference list summaries for a given store.",
        "operationId" : "listApprovedDifferenceListSummaries",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "location",
          "in" : "query",
          "description" : "The location identifier of the store to retrieve the approved difference lists for.",
          "required" : true,
          "type" : "string",
          "x-example" : "http://nedapretail.com/loc/store-1"
        }, {
          "name" : "from_rfid_time",
          "in" : "query",
          "description" : "Approved difference lists with RFID count time after this value will be returned.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "until_rfid_time",
          "in" : "query",
          "description" : "Approved difference lists with RFID count time before this value will be returned.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ApprovedDifferenceListSummary"
              }
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Approved Difference List API"
    },
    "/approved_difference_list/v1/retrieve" : {
      "get" : {
        "tags" : [ "ApprovedDifferenceList" ],
        "summary" : "Retrieve approved difference list",
        "description" : "Retrieves an approved difference list, using the approved difference list identifier.",
        "operationId" : "retrieveApprovedDifferenceList",
        "produces" : [ "application/json", "application/csv", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Identifier of the approved difference list",
          "required" : true,
          "type" : "string",
          "format" : "uuid",
          "x-example" : "96fb929a-80a7-4ddf-ac42-f153838383bb"
        }, {
          "name" : "include_articles",
          "in" : "query",
          "description" : "Whether to include article details like name, size, etc. in the response.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "accept",
          "in" : "header",
          "description" : "Type of file to return.",
          "required" : false,
          "type" : "string",
          "enum" : [ "application/json", "application/csv", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApprovedDifferenceListResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Approved Difference List API"
    },
    "/approved_difference_list/v1/retrieve_summary" : {
      "get" : {
        "tags" : [ "ApprovedDifferenceList" ],
        "summary" : "Retrieve approved difference list summary",
        "description" : "Returns the summary of an approved difference list for a certain location and RFID count time.",
        "operationId" : "retrieveApprovedDifferenceListSummary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "location",
          "in" : "query",
          "description" : "The location identifier of the store to retrieve the approved difference list summary for.",
          "required" : true,
          "type" : "string",
          "x-example" : "http://nedapretail.com/loc/store-1"
        }, {
          "name" : "rfid_time",
          "in" : "query",
          "description" : "Date and time of the RFID count.",
          "required" : true,
          "type" : "string",
          "format" : "date-time"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApprovedDifferenceListSummary"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Approved Difference List API"
    },
    "/approved_difference_list/v1/update_export_status" : {
      "post" : {
        "tags" : [ "ApprovedDifferenceList" ],
        "summary" : "Update approved difference list export status",
        "description" : "Updates the export status of an approved difference list.",
        "operationId" : "updateApprovedDifferenceListExportStatus",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Identifier of the approved difference list.",
          "required" : true,
          "type" : "string",
          "format" : "uuid",
          "x-example" : "41a15207-2324-4beb-aded-738f3316db02"
        }, {
          "name" : "export_status",
          "in" : "query",
          "description" : "New export status of the approved difference list.",
          "required" : true,
          "type" : "string",
          "enum" : [ "NOT_EXPORTED", "EXPORTED", "ERROR" ],
          "x-example" : "NOT_EXPORTED"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Approved Difference List API"
    },
    "/article/v2/find" : {
      "get" : {
        "tags" : [ "Article" ],
        "summary" : "Find articles",
        "description" : "Finds articles based on a search query that allows search in all fields.",
        "operationId" : "findArticles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "Search query. Comma separated values to search for in the articles database (‘AND' query). Search will be executed on all fields and is case insensitive",
          "required" : false,
          "type" : "string",
          "default" : "*",
          "x-example" : "shirt,XXL"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Return this number of articles.",
          "required" : false,
          "type" : "integer",
          "default" : 100,
          "format" : "int32"
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "Skip this number of articles. When omitted: skip none.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "extern_ref",
          "in" : "query",
          "description" : "This can be used to match requests with responses from the server (for example, Ajax requests are asynchronous and thus can return out of sequence).",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "order[]",
          "in" : "query",
          "description" : "Column to which ordering should be applied. When omitted: default order wil be based on score.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi",
          "x-example" : "color, name, barcodes.value"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ArticleFindResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Article API"
    },
    "/article/v2/quantity" : {
      "get" : {
        "tags" : [ "Article" ],
        "summary" : "Get article quantity",
        "description" : "Returns the total quantity of articles stored.",
        "operationId" : "getArticleQuantity",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/QuantityResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Article API"
    },
    "/article/v2/retrieve" : {
      "get" : {
        "tags" : [ "Article" ],
        "summary" : "Retrieve articles",
        "description" : "Retrieves articles. There are three ways to call this endpoint:\n * 1. specify GTINs,\n * 2. specify barcodes, or\n * 3. specify updated_after, skip and count.\n You can not mix these sets: skip and count have no meaning when specifying gtins or barcodes, and combining gtins and updated_after also doesn't work.",
        "operationId" : "retrieveArticles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gtins[]",
          "in" : "query",
          "description" : "The GTIN(s) of which article information should be returned. Repeat key-value for retrieving multiple GTINs. Mutually exclusive with barcodes[] and updated_after.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "barcodes[]",
          "in" : "query",
          "description" : "The barcode(s) of which article information should be returned. Repeat key-value for retrieving multiple barcodes. Mutually exclusive with gtins[] and updated_after.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "updated_after",
          "in" : "query",
          "description" : "Articles updated on or after this time. When omitted: return all Article objects since 1 january 1970.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "Skip this number of articles. When omitted: skip none.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Return this number of articles. The maximum number of returned articles is limited at 50.000. When omitted: return 100 Article objects.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "fields[]",
          "in" : "query",
          "description" : "Which fields should be included in the response. Can be any of the Article fields.\nWhen omitted: all fields will be included in the response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Article"
              }
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Article API"
    },
    "/article/v3/create_or_replace" : {
      "post" : {
        "tags" : [ "Article" ],
        "summary" : "Create or replace articles",
        "description" : "Creates or replaces article(s). Articles are replaced using the GTIN as primary key.",
        "operationId" : "createOrReplaceArticles",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "articles",
          "description" : "A list of articles that should be created or replaced.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Article"
            }
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad request"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Article API"
    },
    "/article/v3/delete" : {
      "delete" : {
        "tags" : [ "Article" ],
        "summary" : "Delete specific articles",
        "description" : "Deletes specified articles from the database. This cannot be undone! Please note the articles are not deleted from the apps. To do that, reset the app and re-register using the QR code.",
        "operationId" : "deleteArticles",
        "parameters" : [ {
          "name" : "gtins[]",
          "in" : "query",
          "description" : "GTIN(s) to delete. Repeat key-value for deleting multiple articles.",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Required field missing: gtins"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Article API"
    },
    "/article/v3/delete_all" : {
      "delete" : {
        "tags" : [ "Article" ],
        "summary" : "Delete all articles",
        "description" : "Deletes all articles from the database. This cannot be undone! Please note the articles are not deleted from the apps. To do that, reset the app and re-register using the QR code.",
        "operationId" : "deleteAllArticles",
        "parameters" : [ ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Article API"
    },
    "/difference_list/v1/retrieve" : {
      "get" : {
        "tags" : [ "DifferenceList" ],
        "summary" : "Retrieve difference list",
        "description" : "Retrieves GTIN-based difference list for a single location. By default, only items with an ERP stock quantity that is different from the RFID count quantity are returned.",
        "operationId" : "retrieveDifferenceList",
        "produces" : [ "application/json", "application/csv", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" ],
        "parameters" : [ {
          "name" : "erp_stock_id",
          "in" : "query",
          "description" : "Identifier of the ERP stock to use.",
          "required" : true,
          "type" : "string",
          "x-example" : "e8a2a3b8-ea3d-4ab6-857b-db1ae25de2e9"
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "Date and time of the RFID count to be used.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "only_differences",
          "in" : "query",
          "description" : "When set to true, only differences will be returned. When set to false, all GTINs in the ERP stock or RFID stock will be returned (except when both are zero).",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "include_articles",
          "in" : "query",
          "description" : "Whether to include article details like name, size, etc. in the response.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DifferenceListResponse"
            }
          },
          "400" : {
            "description" : "Required field missing: location"
          },
          "412" : {
            "description" : "No RFID count for location."
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Difference List API"
    },
    "/difference_list/v1/retrieve_grouped_by_category" : {
      "get" : {
        "tags" : [ "DifferenceList" ],
        "summary" : "Retrieve difference list grouped by article category",
        "description" : "Retrieves GTIN-based difference list for a single location. By default, only items with an ERP stock quantity that is different from the RFID count quantity are returned. Items in difference are grouped by category.",
        "operationId" : "retrieveDifferenceListGroupedByCategory",
        "produces" : [ "application/json", "application/csv", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" ],
        "parameters" : [ {
          "name" : "erp_stock_id",
          "in" : "query",
          "description" : "Identifier of the ERP stock to use.",
          "required" : true,
          "type" : "string",
          "x-example" : "e8a2a3b8-ea3d-4ab6-857b-db1ae25de2e9"
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "Date and time of the RFID count to be used.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "only_differences",
          "in" : "query",
          "description" : "When set to true, only differences will be returned. When set to false, all GTINs in the ERP stock or RFID stock will be returned (except when both are zero).",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "include_articles",
          "in" : "query",
          "description" : "Whether to include article details like name, size, etc. in the response.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DifferenceListByCategoryResponse"
            }
          },
          "400" : {
            "description" : "Required field missing: location."
          },
          "412" : {
            "description" : "No RFID count for location."
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Difference List API"
    },
    "/epcis/v2/query" : {
      "post" : {
        "tags" : [ "Epcis" ],
        "summary" : "Query EPCIS events",
        "description" : "Queries and retrieves EPCIS event(s) that match the criteria specified in the query parameters.",
        "operationId" : "queryEpcisEvents",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "parameters",
          "description" : "Query parameter object. If two or more query parameters are defined, then the AND operation is always applied.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EpcisQueryParameters"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EpcisEvent"
              }
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "EPCIS API"
    },
    "/epcis/v3/capture" : {
      "post" : {
        "tags" : [ "Epcis" ],
        "summary" : "Capture EPCIS events",
        "description" : "Captures and stores EPCIS events. This does not imply any relationship between these EPCIS  events.",
        "operationId" : "captureEpcisEvents",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "events",
          "description" : "A list of EPCIS events to be captured.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/EpcisEvent"
            }
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "EPCIS API"
    },
    "/erp_stock/v1/create" : {
      "post" : {
        "tags" : [ "ErpStock" ],
        "summary" : "Create ERP stock",
        "description" : "Creates an ERP stock.",
        "operationId" : "createErpStock",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "ERP stock",
          "description" : "The ERP stock to create.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ErpStock"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ErpStockCreateResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "ERP Stock API"
    },
    "/erp_stock/v1/list" : {
      "get" : {
        "tags" : [ "ErpStock" ],
        "summary" : "List ERP stocks",
        "description" : "Lists the ERP stock summaries for a given location.",
        "operationId" : "listErpStocks",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "location",
          "in" : "query",
          "description" : "The location for which to list the ERP stocks.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from_event_time",
          "in" : "query",
          "description" : "Retrieve the ERP stock summaries from this time.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "until_event_time",
          "in" : "query",
          "description" : "Retrieve the ERP stock summaries until this time.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ErpStockSummary"
              }
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "ERP Stock API"
    },
    "/erp_stock/v1/retrieve" : {
      "get" : {
        "tags" : [ "ErpStock" ],
        "summary" : "Retrieve ERP stock",
        "description" : "Retrieves details of an ERP stock for a given identifier.",
        "operationId" : "retrieveErpStock",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "The identifier of the ERP stock to retrieve.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "with_excluded",
          "in" : "query",
          "description" : "Boolean parameter that indicates if we want to include excluded GTINs from ERP stock.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ErpStock"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "ERP Stock API"
    },
    "/erp_stock/v1/retrieve_summary" : {
      "get" : {
        "tags" : [ "ErpStock" ],
        "summary" : "Retrieve ERP stock summary",
        "description" : "Retrieves a summary for an ERP stock.",
        "operationId" : "retrieveErpStockSummary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "The identifier of the ERP stock summary to retrieve.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ErpStockSummary"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "ERP Stock API"
    },
    "/kpi/v1/approved_difference_list_accuracy" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return weekly approved difference list accuracy for organization or division.",
        "description" : "Provides weekly approved difference list accuracy for organization or division.",
        "operationId" : "retrieveApprovedDifferenceListAccuracyWeeklyInfo",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiWeeklyResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/approved_difference_list_accuracy_last_week" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return last week's approved difference list accuracy for organization or division.",
        "description" : "Provides last week's approved difference list accuracy for organization or division.",
        "operationId" : "retrieveApprovedDifferenceListAccuracyRecentDaysInfo",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiRecentDaysResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/approved_difference_list_accuracy_week" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return approved difference list accuracy for organization or division for specific week.",
        "description" : "Provides approved difference list accuracy for organization or division for specific week.",
        "operationId" : "retrieveApprovedDifferenceListAccuracySpecificWeek",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiRecentDaysResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/approved_difference_list_category_accuracy" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return weekly approved difference list accuracy per category for organization or division.",
        "description" : "Provides weekly approved difference list accuracy per category for organization or division.",
        "operationId" : "retrieveApprovedDifferenceListCategoryAccuracyWeeklyInfo",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiWeeklyResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/approved_difference_list_category_accuracy_last_week" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return last week's approved difference list accuracy per category for organization of division.",
        "description" : "Provides last week's approved difference list accuracy per category for organization or division.",
        "operationId" : "retrieveApprovedDifferenceListCategoryAccuracyRecentDaysInfo",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiRecentDaysCategoryAccuracyResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/count_duration" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return weekly count duration for organization or division.",
        "description" : "Provides weekly count duration for organization or division.",
        "operationId" : "retrieveCountDurationWeeklyInfo",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiWeeklyResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/count_duration_last_week" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return last week's count duration for organization or division.",
        "description" : "Provides last week's count duration for organization or division.",
        "operationId" : "retrieveCountDurationRecentDaysInfo",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiRecentDaysResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/count_duration_week" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return count duration for organization or division for specific week.",
        "description" : "Return count duration for organization or division for specific week.",
        "operationId" : "retrieveCountDurationSpecificWeek",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiRecentDaysResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/count_progress" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return weekly count progress for organization or division.",
        "description" : "Provides weekly count progress for organization or division.",
        "operationId" : "retrieveCountProgressWeeklyInfo",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiWeeklyResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/count_progress_last_week" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return last week's count progress for organization or division.",
        "description" : "Provides last week's count progress for organization or division.",
        "operationId" : "retrieveCountProgressRecentDaysInfo",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiRecentDaysResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/count_progress_week" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return count progress for organization or division for specific week.",
        "description" : "Provides count progress for organization or division for specific week.",
        "operationId" : "retrieveCountProgressSpecificWeek",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiRecentDaysResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/count_status" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return weekly count status for organization or division.",
        "description" : "Provides weekly count status for organization or division.",
        "operationId" : "retrieveCountStatusWeeklyInfo",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiWeeklyResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/count_status_last_week" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return last week's count status for organization or division.",
        "description" : "Provides last week's count status for organization or division.",
        "operationId" : "retrieveCountStatusRecentDaysInfo",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiRecentDaysResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/count_status_week" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return count status for organization or division for specific week.",
        "description" : "Provides count status for organization or division for specific week.",
        "operationId" : "retrieveCountStatusSpecificWeek",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiRecentDaysResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/count_total_duration" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return weekly total count duration for organization or division.",
        "description" : "Provides weekly total count duration for organization or division.",
        "operationId" : "retrieveCountTotalDurationWeeklyInfo",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiWeeklyResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/count_total_duration_last_week" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return last week's total count duration for organization or division.",
        "description" : "Provides last week's total count duration for organization or division.",
        "operationId" : "retrieveCountTotalDurationRecentDaysInfo",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiRecentDaysResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/count_total_duration_week" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return total count duration for organization or division for specific week.",
        "description" : "Provides total count duration for organization or division for specific week.",
        "operationId" : "retrieveCountTotalDurationSpecificWeek",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiRecentDaysResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/difference_list_accuracy" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return weekly difference list accuracy for organization or division.",
        "description" : "Provides weekly difference list accuracy for organization or division.",
        "operationId" : "retrieveDifferenceListAccuracyWeeklyInfo",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiWeeklyResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/difference_list_accuracy_last_week" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return last week's difference list accuracy for organization of division.",
        "description" : "Provides last week's difference list accuracy for organization or division.",
        "operationId" : "retrieveDifferenceListAccuracyRecentDaysInfo",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiRecentDaysResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/difference_list_accuracy_week" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return difference list accuracy for organization of division for specific week.",
        "description" : "Provides difference list accuracy for organization or division for specific week.",
        "operationId" : "retrieveDifferenceListAccuracySpecificWeek",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiRecentDaysResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/on_shelf_availability" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return weekly on shelf availability for organization or division.",
        "description" : "Provides weekly on shelf availability for organization or division.",
        "operationId" : "retrieveOnShelfAvailabilityWeeklyInfo",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiWeeklyResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/on_shelf_availability_last_week" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return last week's on shelf availability for organization or division.",
        "description" : "Provides last week's on shelf availability for organization or division.",
        "operationId" : "retrieveOnShelfAvailabilityRecentDaysInfo",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiRecentDaysResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/on_shelf_availability_week" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return on shelf availability for organization or division for specific week.",
        "description" : "Provides on shelf availability for organization or division for specific week.",
        "operationId" : "retrieveOnShelfAvailabilitySpecificWeek",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiRecentDaysResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/shipment_reliability" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return weekly shipment reliability for organization or division.",
        "description" : "Provides weekly shipment reliability for organization or division.",
        "operationId" : "retrieveShipmentReliabilityWeeklyInfo",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiWeeklyResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/shipment_reliability_last_week" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return last week's shipment reliability for organization of division.",
        "description" : "Provides last week's shipment reliability for organization or division.",
        "operationId" : "retrieveShipmentReliabilityRecentDaysInfo",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiRecentDaysResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/kpi/v1/shipment_reliability_week" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "summary" : "Return shipment reliability for organization or division for specific week.",
        "description" : "Provides shipment reliability for organization or division for specific week.",
        "operationId" : "retrieveShipmentReliabilitySpecificWeek",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KpiRecentDaysResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Kpi API"
    },
    "/organization/v1/location" : {
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "Get location information",
        "description" : "Retrieves location information by location identifier.",
        "operationId" : "retrieveLocation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Location identifier for a location of type 'site' or 'location'.",
          "required" : true,
          "type" : "string",
          "x-example" : "http://nedapretail.com/loc/store-1"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Location"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Organization API"
    },
    "/organization/v1/retrieve" : {
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "Retrieve organizations",
        "description" : "Retrieves organizations for the current active authentication token.",
        "operationId" : "retrieveOrganization",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Organizations"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Organization API"
    },
    "/organization/v1/sites" : {
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "Get stores",
        "description" : "Gets list of stores, optionally filtered by store code. Note that sublocations will not be included in the response.",
        "operationId" : "listSites",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "store_code",
          "in" : "query",
          "description" : "Defines the LocationObject to retrieve based on store code.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Location"
              }
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Organization API"
    },
    "/refill/v1/retrieve" : {
      "get" : {
        "tags" : [ "Refill" ],
        "summary" : "Calculate Refill suggestion list",
        "description" : "An actionable list with items which can be replenished from stockroom.",
        "operationId" : "retrieveRefillSuggestionList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "from_location",
          "in" : "query",
          "description" : "Location ID of stock room sublocation",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "to_location",
          "in" : "query",
          "description" : "Location ID of sales floor sublocation",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/RefillResponse"
            }
          },
          "400" : {
            "description" : "Required field missing."
          },
          "404" : {
            "description" : "No article info available for all counted GTINs."
          },
          "412" : {
            "description" : "No recent RFID counts available."
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Refill API"
    },
    "/rfid_count/v1/list" : {
      "get" : {
        "tags" : [ "RfidCount" ],
        "summary" : "List RFID counts",
        "description" : "Lists RFID counts for a certain location.",
        "operationId" : "listRfidCounts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "location",
          "in" : "query",
          "description" : "The location identifier to retrieve the count for.",
          "required" : true,
          "type" : "string",
          "x-example" : "http://nedapretail.com/loc/store-1"
        }, {
          "name" : "from_event_time",
          "in" : "query",
          "description" : "Limits the returned list to counts with an event time after the specified date and time.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "until_event_time",
          "in" : "query",
          "description" : "Limits the returned list to counts with an event time before the specified date and time.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RfidCountSummary"
              }
            }
          },
          "400" : {
            "description" : "Required field missing: location."
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "RFID Count API"
    },
    "/rfid_count/v1/retrieve" : {
      "get" : {
        "tags" : [ "RfidCount" ],
        "summary" : "Retrieve RFID count",
        "description" : "Retrieves an RFID count.",
        "operationId" : "retrieveRfidCount",
        "produces" : [ "application/json", "application/csv", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" ],
        "parameters" : [ {
          "name" : "location",
          "in" : "query",
          "description" : "The location identifier to retrieve the count for.",
          "required" : true,
          "type" : "string",
          "x-example" : "http://nedapretail.com/loc/store-1"
        }, {
          "name" : "gtins[]",
          "in" : "query",
          "description" : "Filter by GTIN. When omitted: returns all available GTINs, so no filtering based on GTIN is applied.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "The time of the count to retrieve (relates to the event_time of the count). When omitted: the response will be the latest RFID count.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "include_articles",
          "in" : "query",
          "description" : "Whether to include article details like name, size, etc. in the response.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StockResponse"
            }
          },
          "400" : {
            "description" : "Required field missing: location."
          },
          "404" : {
            "description" : "When location could not be found."
          },
          "412" : {
            "description" : "No RFID count for location."
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "RFID Count API"
    },
    "/rfid_stock/v1/retrieve" : {
      "get" : {
        "tags" : [ "RfidStock" ],
        "summary" : "Retrieve RFID stock",
        "description" : "Returns the real time stock at a certain location in unique items (SGTINs). Items are returned based on their last known bizLocation (location) as registered via the EPCIS Capture API. The response contains a list of stocks for all matching (sub)locations based on the given parameters:\n* If the stock for a store without sublocations is requested, the stocks list in the response will contain one entry containing the stock for the entire store. \n* If a store has sublocations, the list of stocks in the response will contain an entry each for the sublocations.\n* If a store has stock for both sublocations and store, the list of stocks in the response contains entries for the store and the sublocations with stock.",
        "operationId" : "retrieveRfidStock",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "location",
          "in" : "query",
          "description" : "Location identifier of a store or a sublocation.",
          "required" : true,
          "type" : "string",
          "x-example" : "http://nedapretail.com/loc/store-1"
        }, {
          "name" : "location_types[]",
          "in" : "query",
          "description" : "Filter on (sub)location types: only stock on (sub)locations of the specified types will be returned. Multiple  (sub)location types can be specified.\nValid (sub)location types are:\n    STOCK_ROOM, SALES_FLOOR,\n    OFFSITE_STORAGE,\n    FOREIGN and SITE.\nDefault behavior is to return stocks for all (sub)location types except FOREIGN.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi",
          "x-example" : "STOCK_ROOM"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SgtinRfidStockResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "RFID Stock API"
    },
    "/rfid_stock/v1/retrieve_as_gtin14" : {
      "get" : {
        "tags" : [ "RfidStock" ],
        "summary" : "Retrieve RFID stock (GTIN/quantity)",
        "description" : "Returns the real time stock at a certain location per GTIN. Items are returned based on their last known bizLocation (location) as registered via the EPCIS Capture API. The response contains a list of stocks for all matching (sub)locations based on the given parameters:\n* If the stock for a store without sublocations is requested, the stocks list in the response will contain one entry containing the stock for the entire store. \n* If a store has sublocations, the list of stocks in the response will contain an entry each for the sublocations.\n* If a store has stock for both sublocations and store, the list of stocks in the response contains entries for the store and the sublocations with stock.",
        "operationId" : "retrieveRfidStockAsGtin14",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "location",
          "in" : "query",
          "description" : "Location identifier of a store or a sublocation.",
          "required" : true,
          "type" : "string",
          "x-example" : "http://nedapretail.com/loc/store-1"
        }, {
          "name" : "location_types[]",
          "in" : "query",
          "description" : "Filter on (sub)location types: only stock on (sub)locations of the specified types will be returned. Multiple  (sub)location types can be specified.\nValid (sub)location types are:\n    STOCK_ROOM, SALES_FLOOR,\n    OFFSITE_STORAGE,\n    FOREIGN and SITE.\nDefault behavior is to return stocks for all (sub)location types except FOREIGN.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi",
          "x-example" : "STOCK_ROOM"
        }, {
          "name" : "include_articles",
          "in" : "query",
          "description" : "Whether to include article details like name, size, etc. in the response.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GtinRfidStockResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "RFID Stock API"
    },
    "/rfid_stock/v1/retrieve_grouped_by_disposition" : {
      "get" : {
        "tags" : [ "RfidStock" ],
        "summary" : "Retrieve RFID stock (grouped by disposition)",
        "description" : "Returns the real time stock at a certain location in unique items (SGTINs), grouped by disposition. Items are returned based on their last known bizLocation (location) as registered via the EPCIS Capture API. The response contains a list of stocks for all matching (sub)locations based on the given parameters:\n* If the stock for a store without sublocations is requested, the stocks list in the response will contain one entry containing the stock for the entire store. \n* If a store has sublocations, the list of stocks in the response will contain an entry each for the sublocations.\n* If a store has stock for both sublocations and store, the list of stocks in the response contains entries for the store and the sublocations with stock.",
        "operationId" : "retrieveRfidStockGroupedByDisposition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "location",
          "in" : "query",
          "description" : "Location identifier of a store or a sublocation.",
          "required" : true,
          "type" : "string",
          "x-example" : "http://nedapretail.com/loc/store-1"
        }, {
          "name" : "location_types[]",
          "in" : "query",
          "description" : "Filter on (sub)location types: only stock on (sub)locations of the specified types will be returned. Multiple (sub)location types can be  specified.\nValid (sub)location types are:\n    STOCK_ROOM, SALES_FLOOR,\n    OFFSITE_STORAGE,\n    FOREIGN and SITE.\nDefault behavior is to return stocks for all  (sub)location types except FOREIGN.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi",
          "x-example" : "STOCK_ROOM"
        }, {
          "name" : "dispositions[]",
          "in" : "query",
          "description" : "Filter on disposition(s): only stock of the specified disposition(s) will be returned.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SgtinRfidStockResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "RFID Stock API"
    },
    "/rfid_stock/v1/epc_state" : {
      "get" : {
        "tags" : [ "RfidStock" ],
        "summary" : "Retrieve state of an EPC",
        "description" : "Retrieves state (location, disposition and last update timestamp) of an EPC. Specify the EPC in EPC pure identity (SGTIN) format or hexadecimal format.",
        "operationId" : "retrieveEpcState",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "query",
          "name" : "epc_uri",
          "description" : "EPC in EPC pure identity URI (SGTIN) format",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "epc_hex",
          "description" : "EPC in hexadecimal format",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EpcStateResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "RFID Stock API"
    },
    "/shipment/v1/capture" : {
      "post" : {
        "tags" : [ "Shipment" ],
        "summary" : "Capture shipment",
        "description" : "Captures and stores a shipment notice. Shipment notices always have the status 'INTRANSIT'.",
        "operationId" : "captureShipment",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Shipment notice to capture.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Shipment"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad request."
          },
          "409" : {
            "description" : "Shipment notice already exists."
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Shipment API"
    },
    "/shipment/v1/delete" : {
      "delete" : {
        "tags" : [ "Shipment" ],
        "summary" : "Delete shipment",
        "description" : "Deletes a shipment notice. If the shipment notice was created through an aggregation event, this event will be retracted.",
        "operationId" : "deleteShipment",
        "parameters" : [ {
          "name" : "parent_id",
          "in" : "query",
          "description" : "Parent identifier of a shipment.",
          "required" : true,
          "type" : "string",
          "x-example" : "urn:epc:id:sscc:0614141.1234567890"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Shipment API"
    },
    "/shipment/v1/list" : {
      "get" : {
        "tags" : [ "Shipment" ],
        "summary" : "List shipments",
        "description" : "Retrieves a list of shipment summaries. Either source or destination is required, not both.",
        "operationId" : "listShipments",
        "produces" : [ "application/json", "application/csv", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" ],
        "parameters" : [ {
          "name" : "source",
          "in" : "query",
          "description" : "Source of a shipment.",
          "required" : false,
          "type" : "string",
          "x-example" : "http://nedapretail.com/loc/store-1"
        }, {
          "name" : "destination",
          "in" : "query",
          "description" : "Destination of a shipment.",
          "required" : false,
          "type" : "string",
          "x-example" : "http://nedapretail.com/loc/store-2"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status of the shipment.",
          "required" : false,
          "type" : "string",
          "default" : "INTRANSIT",
          "enum" : [ "INTRANSIT", "RECEIVED" ],
          "x-example" : "INTRANSIT"
        }, {
          "name" : "last_modified_since",
          "in" : "query",
          "description" : "Find shipments that have been modified since specified time. When omitted: default is present minus one month.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ShipmentSummary"
              }
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Shipment API"
    },
    "/shipment/v1/retrieve" : {
      "get" : {
        "tags" : [ "Shipment" ],
        "summary" : "Retrieve shipment",
        "description" : "Retrieves a shipment based on the parent identifier.",
        "operationId" : "retrieveShipment",
        "parameters" : [ {
          "name" : "parent_id",
          "in" : "query",
          "description" : "Parent identifier of a shipment.",
          "required" : true,
          "type" : "string",
          "x-example" : "urn:epc:id:sscc:0614141.1234567890"
        }, {
          "name" : "include_articles",
          "in" : "query",
          "description" : "Whether to include article details like name, size, etc. in the response.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Shipment"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Shipment API"
    },
    "/workflow/v2/capture" : {
      "post" : {
        "tags" : [ "Workflow" ],
        "summary" : "Capture workflow event",
        "description" : "Captures a workflow event.",
        "operationId" : "captureWorkflowEvent",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "WorkflowEvent",
          "description" : "A workflow event to capture and store.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/WorkflowEvent"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Workflow API"
    },
    "/workflow/v2/query" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "summary" : "Query workflow events",
        "description" : "Returns a set of workflow events that matches the criteria specified in the query parameters.",
        "operationId" : "queryWorkflowEvents",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "location",
          "in" : "query",
          "description" : "Location identifier of the workflow event.\nWhen omitted: return all workflow events for all locations.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type of the workflow event.\nWhen omitted: return all workflow events for all types.",
          "required" : false,
          "type" : "string",
          "enum" : [ "cycle_count_started", "cycle_count_finished", "partial_count_finished" ]
        }, {
          "name" : "from_event_time",
          "in" : "query",
          "description" : "Minimum event time of the workflow event.\nWhen omitted: returns all workflow events since the epoch.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "until_event_time",
          "in" : "query",
          "description" : "Maximum event time of the workflow event.\nWhen omitted: returns all workflow events up until now.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WorkflowEvent"
              }
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      },
      "x-gelato-group" : "Workflow API"
    }
  },
  "securityDefinitions" : {
    "auth" : {
      "type" : "oauth2",
      "authorizationUrl" : "https://api.nedapretail.com/login/oauth/token",
      "flow" : "implicit"
    }
  },
  "definitions" : {
    "ApprovedDifferenceListExportResponse" : {
      "type" : "object",
      "properties" : {
        "location" : {
          "type" : "string",
          "example" : "http://nedapretail.com/loc/store-1",
          "description" : "Location identifier of the store the difference list is for."
        },
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "7ac36dac-49b3-4207-b923-1ca467e96e88",
          "description" : "Unique identifier for the approved difference list"
        },
        "gtins" : {
          "type" : "array",
          "description" : "List of GTINs in the exported approved difference list.",
          "items" : {
            "type" : "string"
          }
        },
        "articles" : {
          "type" : "array",
          "description" : "Article details like name, size, etc., corresponding to the GTIN in the GTIN list.",
          "items" : {
            "$ref" : "#/definitions/Article"
          }
        },
        "approved_on" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time when this difference list was approved."
        },
        "approved_by" : {
          "type" : "string",
          "example" : "John Doe",
          "description" : "Person that approved the difference list."
        },
        "erp_stock_id" : {
          "type" : "string",
          "example" : "e8a2a3b8-ea3d-4ab6-857b-db1ae25de2e9",
          "description" : "The identifier of the ERP stock that was used in this approved difference list."
        },
        "erp_stock_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date and time of the ERP stock that was used in this approved difference list."
        },
        "erp_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 5263,
          "description" : "Quantity of items in the ERP stock that was used in this approved difference list."
        },
        "erp_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1982,
          "description" : "Quantity of GTINs in the ERP stock that was used in this approved difference list."
        },
        "rfid_stock_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date and time of the RFID count that was used in this approved difference list."
        },
        "rfid_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 5134,
          "description" : "Quantity of items in the RFID count that was used in this approved difference list."
        },
        "rfid_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1924,
          "description" : "Quantity of GTINs in the RFID count that was used in this approved difference list."
        },
        "absolute_difference" : {
          "type" : "integer",
          "format" : "int32",
          "example" : -44,
          "description" : "Absolute difference in items between the RFID count and ERP stock."
        },
        "plus_difference" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 12,
          "description" : "Positive difference in items between the RFID count and ERP stock."
        },
        "minus_difference" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 56,
          "description" : "Negative difference in items between the RFID count and ERP stock."
        },
        "export_status" : {
          "type" : "string",
          "example" : "EXPORTED",
          "description" : "Transfer status of this approved difference list towards the ERP system. Values: NOT_EXPORTED, EXPORTED or ERROR"
        },
        "export_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time when this approved difference list was exported."
        },
        "extern_ref" : {
          "type" : "string",
          "example" : "export_monday_store-1",
          "description" : "The extern_ref field of the ERP stock used for this approved difference list."
        },
        "accuracy" : {
          "type" : "number",
          "format" : "double",
          "example" : 98.3,
          "description" : "Accuracy relation between the ERP stock and RFID stock, according to the SMAPE definition."
        },
        "grouping_by" : {
          "type" : "string",
          "description" : "(Optional) Specifies how the articles are grouped. By default the `erp_quantity` and `rfid_quantity` fields in `gtin_differences` contains the quantity per GTIN. If `group_by` has value `code`, then `erp_quantity` and `rfid_quantity` fields contains quantity per article-code. If the article master database contains 2 or more articles with identical article-code (but of course different GTIN), than only 1 GTIN will be randomly chosen from the set. Note that this feature is specifically designed for Celio."
        },
        "approved_quantity" : {
          "type" : "array",
          "description" : "Quantity of approved GTINs in the exported approved difference list.",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    },
    "ApprovedDifferenceListResponse" : {
      "type" : "object",
      "properties" : {
        "location" : {
          "type" : "string",
          "example" : "http://nedapretail.com/loc/store-1",
          "description" : "Location identifier of the store the difference list is for."
        },
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "7ac36dac-49b3-4207-b923-1ca467e96e88",
          "description" : "Unique identifier for the approved difference list"
        },
        "gtins" : {
          "type" : "array",
          "description" : "List of GTINs in the approved difference list.",
          "items" : {
            "type" : "string"
          }
        },
        "articles" : {
          "type" : "array",
          "description" : "Article details like name, size, etc., corresponding to the GTIN in the GTIN list.",
          "items" : {
            "$ref" : "#/definitions/Article"
          }
        },
        "approved" : {
          "type" : "array",
          "description" : "Approved status, corresponding to the GTIN in the GTIN list.",
          "items" : {
            "type" : "boolean"
          }
        },
        "approved_on" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time when this difference list was approved."
        },
        "approved_by" : {
          "type" : "string",
          "example" : "John Doe",
          "description" : "Person that approved the difference list."
        },
        "erp_stock_id" : {
          "type" : "string",
          "example" : "e8a2a3b8-ea3d-4ab6-857b-db1ae25de2e9",
          "description" : "The identifier of the ERP stock that was used in this approved difference list."
        },
        "erp_stock_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date and time of the ERP stock that was used in this approved difference list."
        },
        "erp_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 5263,
          "description" : "Quantity of items in the ERP stock that was used in this approved difference list."
        },
        "erp_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1982,
          "description" : "Quantity of GTINs in the ERP stock that was used in this approved difference list."
        },
        "rfid_stock_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date and time of the RFID count that was used in this approved difference list."
        },
        "rfid_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 5134,
          "description" : "Quantity of items in the RFID count that was used in this approved difference list."
        },
        "rfid_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1924,
          "description" : "Quantity of GTINs in the RFID count that was used in this approved difference list."
        },
        "absolute_difference" : {
          "type" : "integer",
          "format" : "int32",
          "example" : -44,
          "description" : "Absolute difference in items between the RFID count and ERP stock."
        },
        "plus_difference" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 12,
          "description" : "Positive difference in items between the RFID count and ERP stock."
        },
        "minus_difference" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 56,
          "description" : "Negative difference in items between the RFID count and ERP stock."
        },
        "export_status" : {
          "type" : "string",
          "example" : "EXPORTED",
          "description" : "Transfer status of this approved difference list towards the ERP system. Values: NOT_EXPORTED, EXPORTED or ERROR"
        },
        "export_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time when this approved difference list was exported."
        },
        "extern_ref" : {
          "type" : "string",
          "example" : "export_monday_store-1",
          "description" : "The extern_ref field of the ERP stock used for this approved difference list."
        },
        "accuracy" : {
          "type" : "number",
          "format" : "double",
          "example" : 98.3,
          "description" : "Accuracy relation between the ERP stock and RFID stock, according to the SMAPE definition."
        },
        "grouping_by" : {
          "type" : "string",
          "description" : "(Optional) Specifies how the articles are grouped. By default the `erp_quantity` and `rfid_quantity` fields in `gtin_differences` contains the quantity per GTIN. If `group_by` has value `code`, then `erp_quantity` and `rfid_quantity` fields contains quantity per article-code. If the article master database contains 2 or more articles with identical article-code (but of course different GTIN), than only 1 GTIN will be randomly chosen from the set. Note that this feature is specifically designed for Celio."
        },
        "erp_stock" : {
          "type" : "array",
          "description" : "ERP stock quantity, corresponding to the GTIN in the GTIN list.",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "rfid_stock" : {
          "type" : "array",
          "description" : "RFID count quantity, corresponding to the GTIN in the GTIN list.",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    },
    "ApprovedDifferenceListSummary" : {
      "type" : "object",
      "properties" : {
        "location" : {
          "type" : "string",
          "example" : "http://nedapretail.com/loc/store-1",
          "description" : "Location identifier of the store the difference list is for."
        },
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "7ac36dac-49b3-4207-b923-1ca467e96e88",
          "description" : "Unique identifier for the approved difference list"
        },
        "approved_on" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time when this difference list was approved."
        },
        "approved_by" : {
          "type" : "string",
          "example" : "John Doe",
          "description" : "Person that approved the difference list."
        },
        "erp_stock_id" : {
          "type" : "string",
          "example" : "e8a2a3b8-ea3d-4ab6-857b-db1ae25de2e9",
          "description" : "The identifier of the ERP stock that was used in this approved difference list."
        },
        "erp_stock_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date and time of the ERP stock that was used in this approved difference list."
        },
        "erp_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 5263,
          "description" : "Quantity of items in the ERP stock that was used in this approved difference list."
        },
        "erp_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1982,
          "description" : "Quantity of GTINs in the ERP stock that was used in this approved difference list."
        },
        "rfid_stock_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date and time of the RFID count that was used in this approved difference list."
        },
        "rfid_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 5134,
          "description" : "Quantity of items in the RFID count that was used in this approved difference list."
        },
        "rfid_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1924,
          "description" : "Quantity of GTINs in the RFID count that was used in this approved difference list."
        },
        "absolute_difference" : {
          "type" : "integer",
          "format" : "int32",
          "example" : -44,
          "description" : "Absolute difference in items between the RFID count and ERP stock."
        },
        "plus_difference" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 12,
          "description" : "Positive difference in items between the RFID count and ERP stock."
        },
        "minus_difference" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 56,
          "description" : "Negative difference in items between the RFID count and ERP stock."
        },
        "export_status" : {
          "type" : "string",
          "example" : "EXPORTED",
          "description" : "Transfer status of this approved difference list towards the ERP system. Values: NOT_EXPORTED, EXPORTED or ERROR"
        },
        "export_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time when this approved difference list was exported."
        },
        "extern_ref" : {
          "type" : "string",
          "example" : "export_monday_store-1",
          "description" : "The extern_ref field of the ERP stock used for this approved difference list."
        },
        "accuracy" : {
          "type" : "number",
          "format" : "double",
          "example" : 98.3,
          "description" : "Accuracy relation between the ERP stock and RFID stock, according to the SMAPE definition."
        },
        "grouping_by" : {
          "type" : "string",
          "description" : "(Optional) Specifies how the articles are grouped. By default the `erp_quantity` and `rfid_quantity` fields in `gtin_differences` contains the quantity per GTIN. If `group_by` has value `code`, then `erp_quantity` and `rfid_quantity` fields contains quantity per article-code. If the article master database contains 2 or more articles with identical article-code (but of course different GTIN), than only 1 GTIN will be randomly chosen from the set. Note that this feature is specifically designed for Celio."
        }
      }
    },
    "Article" : {
      "type" : "object",
      "required" : [ "barcodes", "name" ],
      "properties" : {
        "gtin" : {
          "type" : "string",
          "example" : "02123456789126",
          "description" : "GTIN-14, length of 14 digits. Primary key to identify an article (or SKU). GTIN-14 value is validated against the GS1 standard. When no GTIN-14 is provided, it will be generated and unique for this organization."
        },
        "barcodes" : {
          "type" : "array",
          "description" : "Contains all barcodes for this article, for example EAN-13 and UPC-12. Minimum of 1 linear barcode is required.",
          "items" : {
            "$ref" : "#/definitions/Barcode"
          }
        },
        "code" : {
          "type" : "string",
          "example" : "AB123456",
          "description" : "Article code as assigned by the retailer. No relation to GTIN or other barcodes is assumed."
        },
        "brand" : {
          "type" : "string",
          "example" : "Miss Fashion",
          "description" : "The brand of the product."
        },
        "season" : {
          "type" : "string",
          "example" : "Fall 2023",
          "description" : "The season the product belongs to."
        },
        "name" : {
          "type" : "string",
          "example" : "Shirt Awesome",
          "description" : "Name of the article."
        },
        "option" : {
          "type" : "string",
          "example" : "Shirt Awesome, Blue",
          "description" : "Combination of name and color of an article. When omitted: option is automatically filled with name and color fields."
        },
        "style" : {
          "type" : "string",
          "example" : "Shirt Awesome",
          "description" : "Name of the article, independent of color. When omitted: style is automatically filled with name."
        },
        "color" : {
          "type" : "string",
          "example" : "Blue",
          "description" : "Contains color description."
        },
        "sizes" : {
          "type" : "array",
          "description" : "Contains region dependent size descriptions.",
          "items" : {
            "$ref" : "#/definitions/Size"
          }
        },
        "supplier" : {
          "type" : "string",
          "example" : "Supplier Factory",
          "description" : "Supplier name. Can also be factory name."
        },
        "category" : {
          "type" : "string",
          "example" : "Shirts",
          "description" : "Category name. Used to group articles (or SKU's) in the web interface and the apps"
        },
        "prices" : {
          "type" : "array",
          "description" : "Contains various prices that can be country specific.",
          "items" : {
            "$ref" : "#/definitions/Price"
          }
        },
        "gender" : {
          "type" : "string",
          "example" : "Male, Female, Unisex",
          "description" : "Contains the gender. This is free format, but is intended to contain e.g. Male."
        },
        "age_group" : {
          "type" : "string",
          "example" : "Child, Youth, Adult, Senior",
          "description" : "Contains the age group. This is free format, but is intended to contain e.g. Child."
        },
        "refill_category" : {
          "type" : "string",
          "example" : "Jeans, Men, M",
          "description" : "The category used as a key for the refill feature. When omitted category, age group, and gender will be used by default for refill."
        },
        "image_url" : {
          "type" : "string",
          "example" : "http://www.example.org/image.jpg",
          "description" : "A valid url containing an image. The image should be in JPEG, GIF or PNG format and not too large (maximum 250 kB)."
        },
        "last_updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The time when the article was last updated. This field will be overwritten when new article data is uploaded."
        },
        "rfid_tagged" : {
          "type" : "string",
          "example" : "AT_SOURCE",
          "description" : "Indicates how this article is tagged.",
          "enum" : [ "NO", "AT_SOURCE", "MANUAL" ]
        },
        "custom_label_field1" : {
          "type" : "string",
          "description" : "Field used for printing customized RFID labels."
        },
        "custom_label_field2" : {
          "type" : "string",
          "description" : "Field used for printing customized RFID labels."
        },
        "custom_label_field3" : {
          "type" : "string",
          "description" : "Field used for printing customized RFID labels."
        }
      }
    },
    "ArticleFindResponse" : {
      "type" : "object",
      "properties" : {
        "articles" : {
          "type" : "array",
          "description" : "Article details like name, size, etc.",
          "items" : {
            "$ref" : "#/definitions/Article"
          }
        },
        "extern_ref" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 91828367401,
          "description" : "The external reference as specified in the request."
        },
        "records_total" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 849256,
          "description" : "Total number of records, before filtering (i.e. the total number of records in the database)."
        },
        "records_filtered" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 2963,
          "description" : "Total number of records, after filtering (i.e. the total number of records after filtering has been applied - not just the number of records being returned for this page of data)."
        }
      }
    },
    "Barcode" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "ean_13",
          "description" : "Barcode type. Typically ean_13 or upc_12. Values are described in lowercase, digits and underscores. Values can include ean_8, ean_13, upc_12, gs1_128, code_39."
        },
        "value" : {
          "type" : "string",
          "example" : "2123456789126",
          "description" : "Value of barcode."
        }
      }
    },
    "BizTransactionElement" : {
      "type" : "object",
      "required" : [ "biz_transaction" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "urn:epcglobal:cbv:btt:po",
          "description" : "An identifier that indicates what kind of business transaction this BusinessTransaction denotes."
        },
        "biz_transaction" : {
          "type" : "string",
          "example" : "http://transaction.acme.com/po/12345678",
          "description" : "An identifier that denotes a specific business transaction."
        }
      }
    },
    "DestinationElement" : {
      "type" : "object",
      "required" : [ "destination", "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "urn:epcglobal:cbv:sdt:owning_party",
          "description" : "An identifier that indicates what kind of destination this Destination denotes."
        },
        "destination" : {
          "type" : "string",
          "example" : "urn:epc:id:sgln:0614141.00001.0",
          "description" : "An identifier that denotes a specific destination."
        }
      }
    },
    "DifferenceListByCategoryResponse" : {
      "type" : "object",
      "properties" : {
        "categories" : {
          "type" : "array",
          "description" : "List of categories, corresponding to the GTIN in the GTIN list.",
          "items" : {
            "$ref" : "#/definitions/DifferenceListCategory"
          }
        },
        "accuracy" : {
          "type" : "number",
          "format" : "double",
          "example" : 98.3,
          "description" : "Accuracy relation between the ERP stock and RFID count, according to the SMAPE definition."
        },
        "erp_stock_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time of the ERP stock creation."
        },
        "rfid_stock_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time of the RFID count creation."
        },
        "erp_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 6272,
          "description" : "Total quantity of GTINs in the ERP stock."
        },
        "rfid_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 6132,
          "description" : "Total quantity of GTINs in the RFID count."
        },
        "grouping_by" : {
          "type" : "string",
          "description" : "(Optional) Specifies how the articles are grouped. By default the `erp_stock` and `rfid_stock` fields contains the quantity per GTIN. If `group_by` has value `code`, then `erp_stock` and `rfid_stock` fields contains quantity per article-code. If the article master database contains 2 or more articles with identical article-code (but of course different GTIN), than only 1 GTIN will be randomly chosen from the set. Note that this feature is specifically designed for Celio."
        }
      }
    },
    "DifferenceListCategory" : {
      "type" : "object",
      "properties" : {
        "gtins" : {
          "type" : "array",
          "description" : "List of GTINs in the difference list for this category.",
          "items" : {
            "type" : "string"
          }
        },
        "articles" : {
          "type" : "array",
          "description" : "Article details like name, size, etc., corresponding to the GTIN in the GTIN list.",
          "items" : {
            "$ref" : "#/definitions/Article"
          }
        },
        "category" : {
          "type" : "string",
          "description" : "Category name."
        },
        "erp_stock" : {
          "type" : "array",
          "description" : "ERP stock quantity, corresponding to the GTIN in the GTIN list.",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "rfid_stock" : {
          "type" : "array",
          "description" : "RFID count quantity, corresponding to the GTIN in the GTIN list.",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "accuracy" : {
          "type" : "number",
          "format" : "double",
          "example" : 98.3,
          "description" : "Accuracy relation between the ERP stock and RFID count, according to the SMAPE definition."
        }
      }
    },
    "DifferenceListResponse" : {
      "type" : "object",
      "properties" : {
        "gtins" : {
          "type" : "array",
          "description" : "List of GTINs in the difference list.",
          "items" : {
            "type" : "string"
          }
        },
        "articles" : {
          "type" : "array",
          "description" : "Article details like name, size, etc., corresponding to the GTIN in the GTIN list.",
          "items" : {
            "$ref" : "#/definitions/Article"
          }
        },
        "location" : {
          "type" : "string",
          "example" : "http://nedapretail.com/loc/store-1",
          "description" : "Location identifier of the store the difference list is for."
        },
        "erp_stock" : {
          "type" : "array",
          "description" : "ERP stock quantity, corresponding to the GTIN in the GTIN list.",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "rfid_stock" : {
          "type" : "array",
          "description" : "RFID count quantity, corresponding to the GTIN in the GTIN list.",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "erp_stock_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time of the ERP stock creation."
        },
        "rfid_stock_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time of the RFID count creation."
        },
        "erp_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 6272,
          "description" : "Total quantity of GTINs in the ERP stock."
        },
        "rfid_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 6132,
          "description" : "Total quantity of GTINs in the RFID count."
        },
        "accuracy" : {
          "type" : "number",
          "format" : "double",
          "example" : 98.3,
          "description" : "Accuracy relation between the ERP stock and RFID count, according to the SMAPE definition."
        },
        "grouping_by" : {
          "type" : "string",
          "description" : "(Optional) Specifies how the articles are grouped. By default the `erp_stock` and `rfid_stock` fields contains the quantity per GTIN. If `group_by` has value `code`, then `erp_stock` and `rfid_stock` fields contains quantity per article-code. If the article master database contains 2 or more articles with identical article-code (but of course different GTIN), than only 1 GTIN will be randomly chosen from the set. Note that this feature is specifically designed for Celio."
        }
      }
    },
    "EpcisEvent" : {
      "type" : "object",
      "required" : [ "action", "event_time", "event_time_zone_offset", "type" ],
      "discriminator" : "type",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "43abaed0-5d11-4b78-83e0-f49caa777b94",
          "description" : "EPCIS event message identifier, assigned by the creator of the event. This identifier must be unique within the organization."
        },
        "type" : {
          "type" : "string",
          "example" : "object_event",
          "description" : "Type of EPCIS event.",
          "enum" : [ "object_event", "aggregation_event", "transaction_event", "transformation_event" ]
        },
        "action" : {
          "type" : "string",
          "example" : "ADD",
          "description" : "The action field describes the event’s relationship to the lifecycle of the object, aggregation, transaction or transformation.",
          "enum" : [ "ADD", "OBSERVE", "DELETE" ]
        },
        "disposition" : {
          "type" : "string",
          "example" : "urn:epcglobal:cbv:disp:in_transit",
          "description" : "The business condition of the objects associated with the EPCs, presumed to hold true until contradicted by a subsequent event."
        },
        "stored_id" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "138a02fd-a7d2-47bf-81fe-1861dc97fea1",
          "description" : "Identifier for the event, automatically assigned when the event is stored in the database."
        },
        "event_id" : {
          "type" : "string",
          "example" : "b6f3738d-ec80-4fa6-92e6-b20cfcc99af7",
          "description" : "An identifier for this event as specified by the capturing application, globally unique across all events other than error declarations.\n"
        },
        "event_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date and time at which the EPCIS Capturing Applications asserts the event occurred."
        },
        "record_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date and time at which this event was recorded by an EPCIS Repository."
        },
        "event_time_zone_offset" : {
          "type" : "string",
          "example" : "+01:00",
          "description" : "The time zone offset in effect at the time and place the event occurred, expressed as an offset from UTC."
        },
        "biz_step" : {
          "type" : "string",
          "example" : "urn:epcglobal:cbv:bizstep:shipping",
          "description" : "The business step of which this event was a part."
        },
        "biz_location" : {
          "type" : "string",
          "example" : "urn:epc:id:sgln:0012345.11111.0",
          "description" : "The business location where the objects associated with the containing and contained EPCs may be found, until contradicted by a subsequent event."
        },
        "read_point" : {
          "type" : "string",
          "example" : "urn:epc:id:sgln:0012345.11111.400",
          "description" : "The read point at which the event took place."
        },
        "source_list" : {
          "type" : "array",
          "description" : "An unordered list of Source elements that provide context about the originating endpoint of a business transfer of which this event is a part.",
          "items" : {
            "$ref" : "#/definitions/SourceElement"
          }
        },
        "destination_list" : {
          "type" : "array",
          "description" : "An unordered list of Destination elements that provide context about the terminating endpoint of a business transfer of which this event is a part.",
          "items" : {
            "$ref" : "#/definitions/DestinationElement"
          }
        },
        "biz_transaction_list" : {
          "type" : "array",
          "description" : "An unordered list of business transactions that define the context of this event.",
          "items" : {
            "$ref" : "#/definitions/BizTransactionElement"
          }
        },
        "error_declaration" : {
          "description" : "If present, indicates that this event serves to assert that the assertions made by a prior event are in error.",
          "$ref" : "#/definitions/ErrorDeclaration"
        },
        "parent_id" : {
          "type" : "string",
          "example" : "urn:epc:id:sscc:08410580.999999999",
          "description" : "The identifier of the parent of the association."
        },
        "child_epcs" : {
          "type" : "array",
          "description" : "An unordered list of the EPCs of contained objects identified by instance-level identifiers.",
          "items" : {
            "type" : "string"
          }
        },
        "child_quantity_list" : {
          "type" : "array",
          "description" : "An unordered list of one or more QuantityElements identifying (at the class level) contained objects.",
          "items" : {
            "$ref" : "#/definitions/QuantityElement"
          }
        },
        "ilmd" : {
          "type" : "string",
          "description" : "Instance/Lot master data (Section 7.3.6) that describes the objects created during this event."
        },
        "epc_list" : {
          "type" : "array",
          "description" : "An unordered list of one or more EPCs naming specific objects to which the event  pertained.",
          "items" : {
            "type" : "string"
          }
        },
        "quantity_list" : {
          "type" : "array",
          "description" : "An unordered list of one or more QuantityElements identifying (at the class level) objects to which the event pertained.",
          "items" : {
            "$ref" : "#/definitions/QuantityElement"
          }
        },
        "input_epc_list" : {
          "type" : "array",
          "description" : "An unordered list of one or more EPCs identifying (at the instance level) objects that were inputs to the transformation.",
          "items" : {
            "type" : "string"
          }
        },
        "output_epc_list" : {
          "type" : "array",
          "description" : "An unordered list of one or more EPCs naming (at the instance level) objects that were outputs from the transformation.",
          "items" : {
            "type" : "string"
          }
        },
        "input_quantity_list" : {
          "type" : "array",
          "description" : "An unordered list of one or more QuantityElements identifying (at the class level) objects that were inputs to the transformation.",
          "items" : {
            "$ref" : "#/definitions/QuantityElement"
          }
        },
        "output_quantity_list" : {
          "type" : "array",
          "description" : "An unordered list of one or more QuantityElements identifying (at the class level) objects that were outputs from the transformation.",
          "items" : {
            "$ref" : "#/definitions/QuantityElement"
          }
        },
        "transformation_id" : {
          "type" : "string",
          "example" : "afcb68c9-bba9-4101-8f3f-ded8a1dbdfba",
          "description" : "A unique identifier that links this event to other TransformationEvents having an identical value of 'transformationID'."
        }
      }
    },
    "EpcisQueryParameters" : {
      "type" : "object",
      "properties" : {
        "parameters" : {
          "type" : "array",
          "description" : "List of query parameters used to query the EPCIS repository.",
          "items" : {
            "$ref" : "#/definitions/ParameterObject"
          }
        }
      }
    },
    "ErpStock" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "2f60bac5-c4d7-4ca7-b666-79bdf9b780b7",
          "description" : "Identifier of the ERP stock."
        },
        "location" : {
          "type" : "string",
          "example" : "http://nedapretail.com/loc/store-1",
          "description" : "Location identifier of the store that the ERP stock belongs to."
        },
        "event_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The time the ERP stock was exported from the ERP system."
        },
        "extern_ref" : {
          "type" : "string",
          "example" : "export_monday_store-1",
          "description" : "An external reference for the ERP stock, defined by the 3rd party integrator."
        },
        "status" : {
          "type" : "string",
          "example" : "ACCEPTED",
          "description" : "Current status of the ERP stock. 'Validating' means that the stock count is currently being processed and validated. 'Accepted' means that the ERP stock has been validated and processed successfully.",
          "enum" : [ "ACCEPTED", "VALIDATING" ]
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 6253,
          "description" : "Total quantity of items in the ERP stock."
        },
        "excluded_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 124,
          "description" : "Total quantity of excluded items in the ERP stock."
        },
        "gtin_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1542,
          "description" : "Total quantity of GTINs in the ERP stock."
        },
        "excluded_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 65,
          "description" : "Total quantity of excluded GTINs in the ERP stock."
        },
        "in_use" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether the ERP stock is used in a difference list. If it is used, the ERP stock can not be deleted anymore.",
          "default" : false
        },
        "grouping_by" : {
          "type" : "string",
          "description" : "(Optional) Specifies how the articles are grouped. By default the `quantity` field in `quantity_list` contains the quantity per GTIN. If `group_by` has value `code`, then `quantity` field contains quantity per article-code. If the article master database contains 2 or more articles with identical article-code (but of course different GTIN), than only 1 GTIN will be randomly chosen from the set. Note that this feature is specifically designed for Celio."
        },
        "quantity_list" : {
          "type" : "array",
          "description" : "List of GtinQuantity objects; specifying GTIN and the quantity and if the GTIN should be excluded from the expected stock and difference list.",
          "items" : {
            "$ref" : "#/definitions/GtinQuantity"
          }
        }
      },
      "description" : "Provides summary information about an ERP stock."
    },
    "ErpStockCreateResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "2f60bac5-c4d7-4ca7-b666-79bdf9b780b7",
          "description" : "Identifier of the created ERP stock."
        }
      }
    },
    "ErpStockSummary" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "2f60bac5-c4d7-4ca7-b666-79bdf9b780b7",
          "description" : "Identifier of the ERP stock."
        },
        "location" : {
          "type" : "string",
          "example" : "http://nedapretail.com/loc/store-1",
          "description" : "Location identifier of the store that the ERP stock belongs to."
        },
        "event_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The time the ERP stock was exported from the ERP system."
        },
        "extern_ref" : {
          "type" : "string",
          "example" : "export_monday_store-1",
          "description" : "An external reference for the ERP stock, defined by the 3rd party integrator."
        },
        "status" : {
          "type" : "string",
          "example" : "ACCEPTED",
          "description" : "Current status of the ERP stock. 'Validating' means that the stock count is currently being processed and validated. 'Accepted' means that the ERP stock has been validated and processed successfully.",
          "enum" : [ "ACCEPTED", "VALIDATING" ]
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 6253,
          "description" : "Total quantity of items in the ERP stock."
        },
        "excluded_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 124,
          "description" : "Total quantity of excluded items in the ERP stock."
        },
        "gtin_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1542,
          "description" : "Total quantity of GTINs in the ERP stock."
        },
        "excluded_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 65,
          "description" : "Total quantity of excluded GTINs in the ERP stock."
        },
        "in_use" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether the ERP stock is used in a difference list. If it is used, the ERP stock can not be deleted anymore.",
          "default" : false
        },
        "grouping_by" : {
          "type" : "string",
          "description" : "(Optional) Specifies how the articles are grouped. By default the `quantity` field in `quantity_list` contains the quantity per GTIN. If `group_by` has value `code`, then `quantity` field contains quantity per article-code. If the article master database contains 2 or more articles with identical article-code (but of course different GTIN), than only 1 GTIN will be randomly chosen from the set. Note that this feature is specifically designed for Celio."
        }
      },
      "description" : "Provides summary information about an ERP stock."
    },
    "ErrorDeclaration" : {
      "type" : "object",
      "required" : [ "declaration_time" ],
      "properties" : {
        "declaration_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date and time at which the declaration of error is made."
        },
        "reason" : {
          "type" : "string",
          "example" : "urn:epcglobal:cbv:er:incorrect_data",
          "description" : "An element from a standard vocabulary that specifies the reason the prior event is considered erroneous."
        },
        "corrective_event_ids" : {
          "type" : "array",
          "description" : "If present, indicates that the events having the specified URIs as the value of their eventID fields are to be considered as \"corrections\" to the event declared erroneous by this event.",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "A ErrorDeclaration is a structure that identifies a prior EPCISEvent is in error."
    },
    "GtinQuantity" : {
      "type" : "object",
      "required" : [ "gtin", "quantity" ],
      "properties" : {
        "gtin" : {
          "type" : "string",
          "description" : "The GTIN for which the quantity is specified."
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A number that specifies how many or how much of the specified GTIN is denoted by this GtinQuantity. Negative values are allowed."
        },
        "exclude" : {
          "type" : "boolean",
          "description" : "When set to true, the GTIN is excluded from the expected stock and the difference list. Default value is set to `false`.",
          "default" : false
        }
      },
      "description" : "A GtinQuantity is a structure that identifies GTIN plus quantity."
    },
    "GtinRfidStock" : {
      "type" : "object",
      "properties" : {
        "location" : {
          "type" : "string"
        },
        "time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gtins" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "quantities" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "articles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Article"
          }
        },
        "gtin_quantity" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "GtinRfidStockResponse" : {
      "type" : "object",
      "properties" : {
        "stocks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GtinRfidStock"
          }
        }
      }
    },
    "ParameterObject" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "EQ_source_type",
          "description" : "Name of the query parameter."
        },
        "type" : {
          "type" : "string",
          "example" : "urn:epcglobal:cbv:sdt:location",
          "description" : "Type of the value querying for."
        },
        "value" : {
          "type" : "string",
          "example" : "urn:epc:id:sgln:4012345.00225.0",
          "description" : "Value to be queried for within the named parameter."
        },
        "values" : {
          "type" : "array",
          "description" : "Values to be queried for within the named parameter.",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Price" : {
      "type" : "object",
      "properties" : {
        "currency" : {
          "type" : "string",
          "example" : "EUR",
          "description" : "The currency for the specified region (ISO 4217 currency code)."
        },
        "region" : {
          "type" : "string",
          "example" : "NL",
          "description" : "The country defining the region where this price is used (ISO 3166-1 alpha-2 two letter country code)."
        },
        "amount" : {
          "type" : "number",
          "format" : "double",
          "example" : 11.95,
          "description" : "Amount of monetary value."
        }
      }
    },
    "QuantityElement" : {
      "type" : "object",
      "required" : [ "epc_class" ],
      "properties" : {
        "quantity" : {
          "type" : "number",
          "example" : 200.0,
          "description" : "A number that specifies how many or how much of the specified EPCClass is denoted by this QuantityElement."
        },
        "uom" : {
          "type" : "string",
          "example" : "KGM",
          "description" : "If present, specifies a unit of measure by which the specified quantity is to be interpreted as a physical measure, specifying how much of the specified EPCClass is denoted by this QuantityElement."
        },
        "epc_class" : {
          "type" : "string",
          "example" : "urn:epc:class:lgtin:4012345.012345.998877",
          "description" : "A class-level identifier for the class to which the specified quantity of objects belongs."
        }
      },
      "description" : "A QuantityElement is a structure that identifies objects identified by a specific class-level identifier, either a specific quantity or an unspecified quantity."
    },
    "QuantityResponse" : {
      "type" : "object",
      "properties" : {
        "quantity" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 849256,
          "description" : "Number of articles in the database."
        }
      }
    },
    "RefillGtin" : {
      "type" : "object",
      "properties" : {
        "gtin" : {
          "type" : "string"
        },
        "stockroom" : {
          "type" : "integer",
          "format" : "int32"
        },
        "salesfloor" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "RefillOption" : {
      "type" : "object",
      "properties" : {
        "availability" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RefillGtin"
          }
        }
      }
    },
    "RefillResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "location" : {
          "type" : "string",
          "example" : "http://nedapretail.com/loc/store-1",
          "description" : "Location identifier of the store."
        },
        "options" : {
          "type" : "array",
          "description" : "Array of options is ordered based on refill priorities that are determined server side. Also, the list only consists of options which are presented on sales floor and for which at least 1 size is missing and can be refilled from stock room. Note that the list of options can be empty if all options on the salesfloor have all available sizes presented.",
          "items" : {
            "$ref" : "#/definitions/RefillOption"
          }
        },
        "on_shelf_availability" : {
          "type" : "number",
          "format" : "double",
          "example" : 98.3,
          "description" : "The on-shelf availability corresponding to this count (refill list)."
        }
      }
    },
    "RfidCountSummary" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "2f60bac5-c4d7-4ca7-b666-79bdf9b780b7",
          "description" : "Identifier of the RFID count."
        },
        "location" : {
          "type" : "string",
          "example" : "http://nedapretail.com/loc/store-1",
          "description" : "Location identifier of the store or sublocation that the RFID count belongs to."
        },
        "event_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time of the RFID count."
        },
        "start_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time the RFID count started."
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 6253,
          "description" : "Total quantity of items in the RFID count."
        },
        "gtin_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1542,
          "description" : "Total quantity of GTINs in the RFID count."
        },
        "in_use" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether the RFID count is used in a difference list. If it is used, the RFID count can not be deleted anymore.",
          "default" : false
        },
        "client_ids" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "is_complete" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether the RFID count has been completed.",
          "default" : false
        }
      },
      "description" : "Provides summary information about an RFID count."
    },
    "SgtinRfidStock" : {
      "type" : "object",
      "properties" : {
        "location" : {
          "type" : "string",
          "example" : "http://nedapretail.com/loc/store-1",
          "description" : "Location identifier of the stock."
        },
        "time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time of the stock."
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 6273,
          "description" : "Quantity of items in the stock."
        },
        "sgtins" : {
          "type" : "array",
          "description" : "Serialized GTINs in the stock.",
          "items" : {
            "type" : "string"
          }
        },
        "disposition" : {
          "type" : "string",
          "example" : "urn:epcglobal:cbv:disp:sellable_accessible",
          "description" : "Disposition of these Serialized GTINs."
        }
      }
    },
    "SgtinRfidStockResponse" : {
      "type" : "object",
      "properties" : {
        "stocks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SgtinRfidStock"
          }
        }
      }
    },
    "Shipment" : {
      "type" : "object",
      "properties" : {
        "parent_id" : {
          "type" : "string",
          "example" : "urn:epc:id:sscc:0614141.1234567890",
          "description" : "Parent ID of the Shipment according to the EPCIS standards. When the shipment is created by an aggregationEvent, the Parent ID is the same as the Parent ID of the aggregationEvent otherwise it's created by the extern_ref from a shipment. When this isn't conform standards, it's converted to match it."
        },
        "extern_ref" : {
          "type" : "string",
          "example" : "shipment_dc-17812",
          "description" : "Reference for the shipment as defined by the retailer, like a shipment number."
        },
        "source" : {
          "type" : "string",
          "example" : "http://nedapretail.com/loc/store-1",
          "description" : "Location identifier of the source"
        },
        "destination" : {
          "type" : "string",
          "example" : "http://nedapretail.com/loc/store-2",
          "description" : "Location identifier of the destination"
        },
        "created_at" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2017-05-29T09:56:22Z",
          "description" : "Date and time of creation."
        },
        "last_modified_at" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time of last modification. Should not lie before creation time."
        },
        "status" : {
          "type" : "string",
          "example" : "INTRANSIT",
          "description" : "Status of the shipment. Values: INTRANSIT or RECEIVED "
        },
        "sent_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123,
          "description" : "Total number of sent items."
        },
        "received_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 121,
          "description" : "Total number of received items."
        },
        "received_percentage" : {
          "type" : "number",
          "format" : "float",
          "example" : 98.4,
          "description" : "Received percentage for the expected (quantity of) GTINs."
        },
        "properties" : {
          "type" : "object",
          "description" : "Map with additional properties.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "export_status" : {
          "type" : "string",
          "example" : "EXPORTED",
          "description" : "Transfer status of this shipment towards the ERP system. Values: NOT_EXPORTED, EXPORTED or ERROR"
        },
        "gtins" : {
          "type" : "array",
          "description" : "List of GTINs in the shipment.",
          "items" : {
            "type" : "string"
          }
        },
        "sent_quantities" : {
          "type" : "array",
          "description" : "List of sent quantities, corresponding to the GTIN in the GTIN list.",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "received_quantities" : {
          "type" : "array",
          "description" : "List of received quantities, corresponding to the GTIN in the GTIN list.",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "articles" : {
          "type" : "array",
          "description" : "Article details like name, size, etc., corresponding to the GTIN in the GTIN list.",
          "items" : {
            "$ref" : "#/definitions/Article"
          }
        }
      }
    },
    "ShipmentSummary" : {
      "type" : "object",
      "properties" : {
        "parent_id" : {
          "type" : "string",
          "example" : "urn:epc:id:sscc:0614141.1234567890",
          "description" : "Parent ID of the Shipment according to the EPCIS standards. When the shipment is created by an aggregationEvent, the Parent ID is the same as the Parent ID of the aggregationEvent otherwise it's created by the extern_ref from a shipment. When this isn't conform standards, it's converted to match it."
        },
        "extern_ref" : {
          "type" : "string",
          "example" : "shipment_dc-17812",
          "description" : "Reference for the shipment as defined by the retailer, like a shipment number."
        },
        "source" : {
          "type" : "string",
          "example" : "http://nedapretail.com/loc/store-1",
          "description" : "Location identifier of the source"
        },
        "destination" : {
          "type" : "string",
          "example" : "http://nedapretail.com/loc/store-2",
          "description" : "Location identifier of the destination"
        },
        "created_at" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2017-05-29T09:56:22Z",
          "description" : "Date and time of creation."
        },
        "last_modified_at" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time of last modification. Should not lie before creation time."
        },
        "status" : {
          "type" : "string",
          "example" : "INTRANSIT",
          "description" : "Status of the shipment. Values: INTRANSIT or RECEIVED "
        },
        "sent_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123,
          "description" : "Total number of sent items."
        },
        "received_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 121,
          "description" : "Total number of received items."
        },
        "received_percentage" : {
          "type" : "number",
          "format" : "float",
          "example" : 98.4,
          "description" : "Received percentage for the expected (quantity of) GTINs."
        },
        "properties" : {
          "type" : "object",
          "description" : "Map with additional properties.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "export_status" : {
          "type" : "string",
          "example" : "EXPORTED",
          "description" : "Transfer status of this shipment towards the ERP system. Values: NOT_EXPORTED, EXPORTED or ERROR"
        }
      }
    },
    "Size" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "example" : "XL",
          "description" : "The size description for the specified region. Can contain both size and length."
        },
        "region" : {
          "type" : "string",
          "example" : "NL",
          "description" : "The country defining the region where this size description is used (ISO 3166-1 alpha-2 two letter country code)."
        }
      }
    },
    "SourceElement" : {
      "type" : "object",
      "required" : [ "source", "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "urn:epcglobal:cbv:sdt:location",
          "description" : "An identifier that indicates what kind of source this Source denotes."
        },
        "source" : {
          "type" : "string",
          "example" : "urn:epc:id:sgln:4012345.00225.0",
          "description" : "An identifier that denotes a specific source."
        }
      }
    },
    "StockResponse" : {
      "type" : "object",
      "properties" : {
        "generated" : {
          "type" : "string",
          "format" : "date-time"
        },
        "gtins" : {
          "type" : "array",
          "description" : "List of GTINs in the stock.",
          "items" : {
            "type" : "string"
          }
        },
        "locations" : {
          "type" : "array",
          "description" : "List of location identifiers in the stock, corresponding to the GTIN in the GTIN list.",
          "items" : {
            "type" : "string"
          }
        },
        "quantities" : {
          "type" : "array",
          "description" : "Stock quantity, corresponding to the GTIN in the GTIN list.",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time of the stock."
        },
        "articles" : {
          "type" : "array",
          "description" : "Article details like name, size, etc., corresponding to the GTIN in the GTIN list.",
          "items" : {
            "$ref" : "#/definitions/Article"
          }
        },
        "rfid_stock_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "rfid_stock_start_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "stock_rooms_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sales_floors_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "store_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "stock_ratio" : {
          "type" : "number",
          "format" : "double"
        },
        "client_ids" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "is_complete" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether the RFID count has been completed.",
          "default" : false
        }
      }
    },
    "Store" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "CUSTOMERORGANIZATION", "DIVISION", "STORE", "SUBLOCATION" ]
        },
        "updatedAt" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "customerOrganizationId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "parents" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TargetTypeId"
          }
        },
        "parentNames" : {
          "type" : "string"
        },
        "locationIdentifierTag" : {
          "type" : "string"
        },
        "branchId" : {
          "type" : "string"
        },
        "storeType" : {
          "type" : "string"
        },
        "manager" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "timezone" : {
          "type" : "string"
        },
        "trial" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "TargetTypeId" : {
      "type" : "object",
      "properties" : {
        "targetId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "targetType" : {
          "type" : "string",
          "enum" : [ "CUSTOMERORGANIZATION", "DIVISION", "STORE", "SUBLOCATION" ]
        },
        "name" : {
          "type" : "string"
        },
        "locationIdentifierTag" : {
          "type" : "string"
        }
      }
    },
    "WorkflowEvent" : {
      "type" : "object",
      "required" : [ "event_time", "location", "message_ids", "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "cycle_count_finished",
          "description" : "Type of the workflow. Values: cycle_count_started, cycle_count_finished or partial_count_finished."
        },
        "location" : {
          "type" : "string",
          "example" : "http://nedapretail.com/loc/store-1",
          "description" : "The location identifier of the location for which the workflow is defined. Usually this is a store."
        },
        "event_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Client-side time when the user decided the event ended.\nThis is not the moment of sending the workflow event nor is it the moment when the last EPC was observed."
        },
        "start_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Time when the first EPC was observed.\n"
        },
        "epc_count" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 23463,
          "description" : "The total number of EPCs that were affected in the referenced message_ids."
        },
        "message_ids" : {
          "type" : "array",
          "description" : "List of EPCIS event message identifiers, the 'id' field in the EPCIS event.These events contain the actual EPCs that were affected.",
          "items" : {
            "type" : "string"
          }
        },
        "client_id" : {
          "type" : "string",
          "description" : "OAuth Client ID of the device generating the workflow event."
        }
      }
    },
    "ApprovedDifferenceListAccuracyKpiValue" : {
      "type" : "object",
      "properties" : {
        "accuracy" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "CountDurationKpiValue" : {
      "type" : "object",
      "properties" : {
        "quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "clients" : {
          "type" : "integer",
          "format" : "int32"
        },
        "duration_in_sec" : {
          "type" : "integer",
          "format" : "int32"
        },
        "duration_calculated" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "CountProgressKpiValue" : {
      "type" : "object",
      "properties" : {
        "progress" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "CountStatusKpiValue" : {
      "type" : "object",
      "properties" : {
        "incomplete" : {
          "type" : "integer",
          "format" : "int32"
        },
        "complete" : {
          "type" : "integer",
          "format" : "int32"
        },
        "approved" : {
          "type" : "integer",
          "format" : "int32"
        },
        "not_counted" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "CountTotalDurationKpiValue" : {
      "type" : "object",
      "properties" : {
        "total_duration" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DifferenceListAccuracyKpiValue" : {
      "type" : "object",
      "properties" : {
        "accuracy" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "Division" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "KpiRecentDaysCategoryAccuracyResponse" : {
      "type" : "object",
      "properties" : {
        "division" : {
          "$ref" : "#/definitions/Division"
        },
        "data" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "number",
            "format" : "double"
          }
        }
      }
    },
    "KpiRecentDaysResponse" : {
      "type" : "object",
      "properties" : {
        "division" : {
          "$ref" : "#/definitions/Division"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RecentDaysKpi"
          }
        }
      }
    },
    "KpiWeeklyResponse" : {
      "type" : "object",
      "properties" : {
        "division" : {
          "$ref" : "#/definitions/Division"
        },
        "store" : {
          "$ref" : "#/definitions/Store"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WeeklyKpi"
          }
        }
      }
    },
    "OnShelfAvailabilityKpiValue" : {
      "type" : "object",
      "properties" : {
        "on_shelf_availability" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "RecentDaysKpi" : {
      "type" : "object",
      "properties" : {
        "division" : {
          "$ref" : "#/definitions/Division"
        },
        "store" : {
          "$ref" : "#/definitions/Store"
        },
        "approved_difference_list_accuracy_kpi_value" : {
          "$ref" : "#/definitions/ApprovedDifferenceListAccuracyKpiValue"
        },
        "count_status_kpi_value" : {
          "$ref" : "#/definitions/CountStatusKpiValue"
        },
        "count_duration_kpi_value" : {
          "$ref" : "#/definitions/CountDurationKpiValue"
        },
        "count_progress_kpi_value" : {
          "$ref" : "#/definitions/CountProgressKpiValue"
        },
        "count_total_duration_kpi_value" : {
          "$ref" : "#/definitions/CountTotalDurationKpiValue"
        },
        "on_shelf_availability_kpi_value" : {
          "$ref" : "#/definitions/OnShelfAvailabilityKpiValue"
        },
        "shipment_reliability_kpi_value" : {
          "$ref" : "#/definitions/ShipmentReliabilityKpiValue"
        },
        "approved_difference_list_category_accuracy_kpi_value" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "difference_list_accuracy_kpi_value" : {
          "$ref" : "#/definitions/DifferenceListAccuracyKpiValue"
        }
      }
    },
    "ShipmentReliabilityKpiValue" : {
      "type" : "object",
      "properties" : {
        "percentage" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "WeekInfo" : {
      "type" : "object",
      "properties" : {
        "year" : {
          "type" : "integer",
          "format" : "int32"
        },
        "week" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "WeeklyKpi" : {
      "type" : "object",
      "properties" : {
        "week_info" : {
          "$ref" : "#/definitions/WeekInfo"
        },
        "approved_difference_list_accuracy_kpi_value" : {
          "$ref" : "#/definitions/ApprovedDifferenceListAccuracyKpiValue"
        },
        "count_status_kpi_value" : {
          "$ref" : "#/definitions/CountStatusKpiValue"
        },
        "count_duration_kpi_value" : {
          "$ref" : "#/definitions/CountDurationKpiValue"
        },
        "count_progress_kpi_value" : {
          "$ref" : "#/definitions/CountProgressKpiValue"
        },
        "count_total_duration_kpi_value" : {
          "$ref" : "#/definitions/CountTotalDurationKpiValue"
        },
        "on_shelf_availability_kpi_value" : {
          "$ref" : "#/definitions/OnShelfAvailabilityKpiValue"
        },
        "shipment_reliability_kpi_value" : {
          "$ref" : "#/definitions/ShipmentReliabilityKpiValue"
        },
        "approved_difference_list_category_accuracy_kpi_value" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "difference_list_accuracy_kpi_value" : {
          "$ref" : "#/definitions/DifferenceListAccuracyKpiValue"
        }
      }
    },
    "Address" : {
      "type" : "object",
      "properties" : {
        "city" : {
          "type" : "string"
        },
        "region" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "countryCode" : {
          "type" : "string"
        },
        "latitude" : {
          "type" : "number",
          "format" : "double"
        },
        "longitude" : {
          "type" : "number",
          "format" : "double"
        },
        "address_line_1" : {
          "type" : "string"
        },
        "address_line_2" : {
          "type" : "string"
        }
      }
    },
    "Location" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "http://nedapretail.com/loc/store-1",
          "description" : "Unique location identifier."
        },
        "type" : {
          "type" : "string",
          "example" : "SITE",
          "description" : "Type of location."
        },
        "subtype" : {
          "type" : "string",
          "example" : "FASHION",
          "description" : "Subtype of store or location."
        },
        "name" : {
          "type" : "string",
          "example" : "Miss Fashion Amsterdam",
          "description" : "Name of the store or location."
        },
        "address" : {
          "description" : "Address details. Only when type equals 'site'.",
          "$ref" : "#/definitions/Address"
        },
        "children" : {
          "type" : "array",
          "description" : "List of sublocations (if any). Only when type equals 'site'.",
          "items" : {
            "$ref" : "#/definitions/Location"
          }
        },
        "parent_id" : {
          "type" : "string",
          "example" : "http://nedapretail.com/loc/store-1",
          "description" : "Location identifier of parent (only when type = 'location', 'location_internal'or 'location_external')."
        },
        "store_code" : {
          "type" : "string",
          "example" : "001",
          "description" : "Store code (branch ID) of the store or location (as defined by retailer). Only when type equals 'site'."
        }
      }
    },
    "Organization" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "ORGANIZATION",
          "description" : "Type of the organization. Values: ORGANIZATION or BUSINESS_PARTNER."
        },
        "name" : {
          "type" : "string",
          "example" : "Miss Fashion",
          "description" : "Name of the organization."
        },
        "organization_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 2736423,
          "description" : "Identifier of the organization."
        }
      }
    },
    "Organizations" : {
      "type" : "object",
      "properties" : {
        "own" : {
          "description" : "Own organization.",
          "$ref" : "#/definitions/Organization"
        },
        "linked" : {
          "type" : "array",
          "description" : "Linked organization, other organization(s) you have access to.",
          "items" : {
            "$ref" : "#/definitions/Organization"
          }
        }
      }
    },
    "SellRequest" : {
      "type" : "object",
	  "description" : "One of epc_uri, epc_hex or gs1_elementstring should be supplied, if multiple elements are set the request will fail",
	  "required" : ["biz_location", "timestamp"],
      "properties" : {
        "epc_uri" : {
          "type" : "string",
          "example" : "urn:epc:id:sgtin:0614141.812345.6789",
          "description" : "EPC pure identity URI"
        },
        "epc_hex" : {
          "type" : "string",
          "example" : "3074257bf7194e4000001a85",
          "description" : "EPC (hexadecimal)"
        },
        "gs1_elementstring" : {
          "type" : "string",
          "example" : "(01)80614141123458(21)6789",
          "description" : "GS1 element string"
        },
        "disposition" : {
          "type" : "string",
          "example" : "urn:epcglobal:cbv:disp:retail_sold",
		  "default": "urn:epcglobal:cbv:disp:retail_sold",
          "description" : "Disposition"
        },
        "biz_location" : {
          "type" : "string",
          "example" : "http://nedapretail.com/loc/store-1",
          "description" : "Location identifier of the store or sublocation"
        },
        "read_point" : {
          "type" : "string",
          "example" : "http://nedapretail.com/loc/store-1",
          "description" : "Location identifier of readpoint (optional, will be equal to 'biz_location' if omitted)"
        },
        "timestamp" : {
          "type" : "string",
		  "format" : "date-time",
          "example" : "2018-07-13T10:35:26Z",
          "description" : "ISO8601 representation of the date/time the item was sold"
        },
        "recorded_timestamp" : {
          "type" : "string",
		  "format" : "date-time",
          "example" : "2018-07-13T10:35:26Z",
          "description" : "ISO8601 representation of the date/time the transaction was recorded"
        }
      }
	},
     "EpcStateResponse" : {
      "type" : "object",
      "properties" : {
        "epc" : {
          "type" : "string",
		  "description": "EPC formatted as pure identity URI"
        },
        "bizLocation" : {
          "type" : "string",
		  "description": "Location identifier of the last known location of the item"
        },
        "disposition" : {
          "type" : "string",
		  "description": "Disposition (status) of the item"
        },
        "timestamp" : {
          "type" : "string",
          "format" : "date-time",
		  "description": "ISO8601 representation of the date/time of the last update"
        }
      }
    },
   "ReturnRequest" : {
      "type" : "object",
	  "description" : "One of epc_uri, epc_hex or gs1_elementstring should be supplied, if multiple elements are set the request will fail",
	  "required" : ["biz_location", "timestamp"],
      "properties" : {
        "epc_uri" : {
          "type" : "string",
          "example" : "urn:epc:id:sgtin:0614141.812345.6789",
          "description" : "EPC pure identity URI"
        },
        "epc_hex" : {
          "type" : "string",
          "example" : "3074257bf7194e4000001a85",
          "description" : "EPC (hexadecimal)"
        },
        "gs1_elementstring" : {
          "type" : "string",
          "example" : "(01)80614141123458(21)6789",
          "description" : "GS1 element string"
        },
        "disposition" : {
          "type" : "string",
          "example" : "urn:epcglobal:cbv:disp:sellable_accessible",
		  "default": "urn:epcglobal:cbv:disp:sellable_accessible",
          "description" : "Disposition"
        },
        "biz_location" : {
          "type" : "string",
          "example" : "http://nedapretail.com/loc/store-1",
          "description" : "Location identifier of the store or sublocation"
        },
        "read_point" : {
          "type" : "string",
          "example" : "http://nedapretail.com/loc/store-1",
          "description" : "Location identifier of readpoint (optional, will be equal to 'biz_location' if omitted)"
        },
        "timestamp" : {
          "type" : "string",
		  "format" : "date-time",
          "example" : "2018-07-13T10:35:26Z",
          "description" : "ISO8601 representation of the date/time the item was returned"
        },
        "recorded_timestamp" : {
          "type" : "string",
		  "format" : "date-time",
          "example" : "2018-07-13T10:35:26Z",
          "description" : "ISO8601 representation of the date/time the transaction was recorded"
        }  
      }
	}	
  }
}