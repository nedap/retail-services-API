{
  "swagger" : "2.0",
  "info" : {
    "description" : "!D Cloud is an RFID integration platform for retail stores. While we provide core functionality for retail companies, a lot of functionality can be added or extended by 3rd party developers. We encourage you to do so!",
    "version" : "v1",
    "title" : "!D Cloud API",
    "contact" : {
      "url" : "http://www.nedap-idcloud.com/contact/",
      "email" : "info@nedap-idcloud.com"
    },
    "license" : {
      "name" : "The MIT License (MIT)",
      "url" : "https://github.com/nedap/retail-services-API/blob/master/LICENSE"
    }
  },
  "host" : "api.nedapretail.com",
  "tags" : [ "NotOnShelf", "Epcis", "DifferenceList", "Organization", "ApprovedDifferenceList", "Article", "RfidStock", "Shipment", "Workflow", "RfidCount", "ErpStock" ],
  "schemes" : [ "https" ],
  "paths" : {
    "/approved_difference_list/v1/export" : {
      "get" : {
        "tags" : [ "ApprovedDifferenceList" ],
        "summary" : "Export an approved difference list",
        "description" : "This endpoint returns the approved difference list with only one quantity per GTIN: the RFID quantity if the difference for that GTIN has been approved, otherwise the ERP quantity. This endpoint returns all GTINs, even the ones where RFID and ERP quantities are equal.",
        "operationId" : "exportApprovedDifferenceList",
        "produces" : [ "application/json", "application/csv", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Approved difference list ID.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "include_articles",
          "in" : "query",
          "description" : "When set to true the article master data will be included in the response.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "accept",
          "in" : "header",
          "description" : "Approved difference list ID.",
          "required" : false,
          "type" : "string",
          "enum" : [ "application/json", "application/csv", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApprovedDifferenceListExportResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/approved_difference_list/v1/list" : {
      "get" : {
        "tags" : [ "ApprovedDifferenceList" ],
        "summary" : "List of approved difference list summaries",
        "description" : "Retrieves list of approved difference lists for given location.",
        "operationId" : "listApprovedDifferenceListSummaries",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "location",
          "in" : "query",
          "description" : "The location identifier for list of approved difference lists.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from_rfid_time",
          "in" : "query",
          "description" : "Defines date+time since when approved difference lists are required.\nWhen omitted: returns all approved difference lists for specified location since the epoch.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "until_rfid_time",
          "in" : "query",
          "description" : "Defines date+time until when approved difference lists are required.\nWhen omitted: returns all approved difference lists for specified location up until now.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ApprovedDifferenceListSummary"
              }
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/approved_difference_list/v1/retrieve" : {
      "get" : {
        "tags" : [ "ApprovedDifferenceList" ],
        "summary" : "Retrieve an approved difference list",
        "description" : "Retrieve an approved difference list using the difference list ID. The response contains GTIN, ERP quantity, RFID quantity and an approved flag. This endpoint returns all GTINs, even the ones where RFID and ERP quantities are equal.",
        "operationId" : "retrieveApprovedDifferenceList",
        "produces" : [ "application/json", "application/csv", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Approved difference list ID.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "include_articles",
          "in" : "query",
          "description" : "When set to true the article master data will be included in the response.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "accept",
          "in" : "header",
          "description" : "Approved difference list ID.",
          "required" : false,
          "type" : "string",
          "enum" : [ "application/json", "application/csv", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApprovedDifferenceListResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/approved_difference_list/v1/retrieve_summary" : {
      "get" : {
        "tags" : [ "ApprovedDifferenceList" ],
        "summary" : "Retrieve the summary an approved difference list",
        "description" : "Returns the summary of an approved difference list for a certain location and RFID time.",
        "operationId" : "retrieveApprovedDifferenceListSummary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "location",
          "in" : "query",
          "description" : "The location identifier for list of approved difference lists.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rfid_time",
          "in" : "query",
          "description" : "Date and time of an RFID stock.",
          "required" : true,
          "type" : "string",
          "format" : "date-time"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApprovedDifferenceListSummary"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/approved_difference_list/v1/update_export_status" : {
      "post" : {
        "tags" : [ "ApprovedDifferenceList" ],
        "summary" : "Update the export status of an approved difference list",
        "description" : "!D Cloud keeps track of the export status of approved difference lists. This endpoint can be used to update the status in !D Cloud.",
        "operationId" : "updateApprovedDifferenceListExportStatus",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "ID of approved difference list.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "export_status",
          "in" : "query",
          "description" : "New export status of approved difference list.",
          "required" : true,
          "type" : "string",
          "enum" : [ "NOT_EXPORTED", "EXPORTED", "ERROR" ]
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/article/v2/create_or_replace" : {
      "post" : {
        "tags" : [ "Article" ],
        "summary" : "Create or replace article(s)",
        "description" : "Create or replace article(s) in !D Cloud. Replacing will happen based on GTIN, which is the primary key.",
        "operationId" : "createOrReplaceArticles",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "articles",
          "description" : "An array of articles that should be created or replaced.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Articles"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad request"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/article/v2/create_or_update" : {
      "post" : {
        "tags" : [ "Article" ],
        "summary" : "Create or update articles",
        "description" : "Articles are create or updated using the GTIN as primary key.",
        "operationId" : "createOrUpdateArticles",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "articles",
          "description" : "An array of articles that should be updated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Articles"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad request"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/article/v2/find" : {
      "get" : {
        "tags" : [ "Article" ],
        "summary" : "Find articles using search query",
        "description" : "",
        "operationId" : "findArticles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "Search query.",
          "required" : false,
          "type" : "string",
          "default" : "*"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Return this number of articles.",
          "required" : false,
          "type" : "integer",
          "default" : 100,
          "format" : "int32"
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "Skip this number of articles. When omitted: skip none.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "extern_ref",
          "in" : "query",
          "description" : "This can be used to match requests with responses from the server (for example, Ajax requests are asynchronous and thus can return out of sequence).",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "order[]",
          "in" : "query",
          "description" : "Column to which ordering should be applied. When omitted: default order wil be based on score.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi",
          "x-example" : "color, name, barcodes.value"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ArticleFindResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/article/v2/quantity" : {
      "get" : {
        "tags" : [ "Article" ],
        "summary" : "Get quantity of articles",
        "description" : "Returns the total number of articles registered in !D Cloud.",
        "operationId" : "getArticleQuantity",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/QuantityResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/article/v2/retrieve" : {
      "get" : {
        "tags" : [ "Article" ],
        "summary" : "Get articles",
        "description" : "Retrieve articles. There are three ways to call this endpoint:\n 1) specify gtins,\n 2) specify barcodes, or\n 3) specify updated_after, skip and count.\n You can not mix these sets: skip and count have no meaning when specifying gtins or barcodes, and combining gtins and updated_after also doesn't work.",
        "operationId" : "retrieveArticles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gtins[]",
          "in" : "query",
          "description" : "The GTIN(s) of which article information should be returned. Repeat key-value for retrieving multiple GTINs. Mutually exclusive with barcodes[] and updated_after.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "barcodes[]",
          "in" : "query",
          "description" : "The barcode(s) of which article information should be returned. Repeat key-value for retrieving multiple barcodes. Mutually exclusive with gtins[] and updated_after.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "updated_after",
          "in" : "query",
          "description" : "Articles updated on or after this time. When omitted: return all Article objects since 1 january 1970.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "Skip this number of articles. When omitted: skip none.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Return this number of articles. The maximum number of returned articles is limited at 50.000. When omitted: return 100 Article objects.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "fields[]",
          "in" : "query",
          "description" : "Which fields should be included in the response. Can be any of the Article fields.\nWhen omitted: all fields will be included in the response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Article"
              }
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/article/v3/delete" : {
      "delete" : {
        "tags" : [ "Article" ],
        "summary" : "Delete articles",
        "description" : "Delete specified articles from the database. This cannot be undone! Please note the articles are not  deleted from the !D Cloud mobile apps. To do that, reset the app and re-register using the QR code.",
        "operationId" : "deleteArticles",
        "parameters" : [ {
          "name" : "gtins[]",
          "in" : "query",
          "description" : "GTIN(s) to delete. Repeat key-value for deleting multiple articles.",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Missing parameter: gtins"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/article/v3/delete_all" : {
      "delete" : {
        "tags" : [ "Article" ],
        "summary" : "Delete all articles",
        "description" : "Delete all articles from the database. This cannot be undone! Please note the articles are not deleted from the !D Cloud mobile apps. To do that, reset the app and re-register using the QR code.",
        "operationId" : "deleteAllArticles",
        "parameters" : [ ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/difference_list/v1/retrieve" : {
      "get" : {
        "tags" : [ "DifferenceList" ],
        "summary" : "Retrieve GTIN-based difference list for a single location",
        "description" : "By default, only differences are returned and items where there is no difference are omitted",
        "operationId" : "retrieveDifferenceList",
        "produces" : [ "application/json", "application/csv", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" ],
        "parameters" : [ {
          "name" : "erp_stock_id",
          "in" : "query",
          "description" : "ERP stock ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "The date and time you would like to have the RFID stock information from.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "only_differences",
          "in" : "query",
          "description" : "When set to true (default) this will return only differences. When set to false, this will return all entries in ERP stock or RFID stock (except when both are zero) (optional)",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "include_articles",
          "in" : "query",
          "description" : "When set to true the article master data will be included in the response.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DifferenceListResponse"
            }
          },
          "400" : {
            "description" : "Required field missing: location."
          },
          "412" : {
            "description" : "No RFID count for location."
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/epcis/v2/capture" : {
      "post" : {
        "tags" : [ "Epcis" ],
        "summary" : "Captures and stores EPCIS events in !D Cloud.",
        "description" : "The capture endpoint captures one or more EPCIS events at a time. This does not imply any relationship between these EPCIS events. Each element of the argument list is accepted if it is a valid EPCIS event or subtype that conforms to the above EPCIS event types.",
        "operationId" : "captureEpcisEvents",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "events",
          "description" : "An array of EPCISEvent(s) to capture and store.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EpcisEventContainer"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/epcis/v2/query" : {
      "post" : {
        "tags" : [ "Epcis" ],
        "summary" : "Query and retrieve EPCIS event(s) from !D Cloud.",
        "description" : "Returns a set of EPCIS Events that matches the criteria specified in the query parameters.",
        "operationId" : "queryEpcisEvents",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "parameters",
          "description" : "Query parameter object. If two or more query parameters are defined, then the AND operation is always applied.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EpcisQueryParameters"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EpcisEvent"
              }
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/erp_stock/v1/create" : {
      "post" : {
        "tags" : [ "ErpStock" ],
        "summary" : "Create ERP stock",
        "description" : "Create an ERP stock.",
        "operationId" : "createErpStock",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "ERP stock",
          "description" : "The ERP stock to store.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Stock"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ErpStockCreateResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/erp_stock/v1/list" : {
      "get" : {
        "tags" : [ "ErpStock" ],
        "summary" : "Get ERP stock summaries",
        "description" : "Retrieves ERP stock summary list for given location.",
        "operationId" : "listErpStocks",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "location",
          "in" : "query",
          "description" : "The location for which the stock is defined.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from_event_time",
          "in" : "query",
          "description" : "Retrieve the ERP stock summaries from this time.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "until_event_time",
          "in" : "query",
          "description" : "Retrieve the ERP stock summaries until this time.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StockSummary"
              }
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/erp_stock/v1/retrieve" : {
      "get" : {
        "tags" : [ "ErpStock" ],
        "summary" : "Retrieve a list of GTINs and quantities for a certain ERP stock.",
        "description" : "",
        "operationId" : "retrieveErpStock",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "The ID of the ERP stock to retrieve.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "with_excluded",
          "in" : "query",
          "description" : "Boolean parameter that indicates if we want to include excluded GTINs from ERP stock.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Stock"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/erp_stock/v1/retrieve_summary" : {
      "get" : {
        "tags" : [ "ErpStock" ],
        "summary" : "Retrieve ERP stock summary.",
        "description" : "",
        "operationId" : "retrieveErpStockSummary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "The ID of the ERP stock summary to retrieve.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StockSummary"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/not_on_shelf/v1/retrieve" : {
      "get" : {
        "tags" : [ "NotOnShelf" ],
        "summary" : "Lists all the items that are not-on-shelf for a certain store (taking all sales floors together), or for a certain sales floor.",
        "description" : "Not-on-shelf is defined as a situation where a certain GTIN is 'low' at a sales floor location, but still available in a stock room location. 'Low' is typically defined as 'zero available', but that might change in the future. !D Cloud excludes items that (based on historical data) never have been on the sales floor before.\nRetrieve all items that are not on the shop floor of a store, but still available in the stock-room of that same store. Those items can be replenished.",
        "operationId" : "retrieveNotOnShelf",
        "produces" : [ "application/json", "application/csv", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" ],
        "parameters" : [ {
          "name" : "location",
          "in" : "query",
          "description" : "The location to retrieve the not-on-shelf list for",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "include_articles",
          "in" : "query",
          "description" : "When set to true the article master data will be included in the response.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/NotOnShelfResponse"
            }
          },
          "400" : {
            "description" : "Invalid location."
          },
          "412" : {
            "description" : "No data available."
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/organization/v1/location" : {
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "Get Location by location identifier",
        "description" : "",
        "operationId" : "retrieveLocation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "It can be either a location identifier for a location of type SITE or LOCATION.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Location"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/organization/v1/retrieve" : {
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "Get list of organizations associated with the OAuth access token",
        "description" : "",
        "operationId" : "retrieveOrganization",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Organizations"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/organization/v1/sites" : {
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "Get list of stores or search for stores based on store code",
        "description" : "Get list of stores, or search for stores based on store code. Note that sublocations will not be included in the response!",
        "operationId" : "listSites",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "store_code",
          "in" : "query",
          "description" : "Defines the LocationObject to retrieve based on store_code.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Location"
              }
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/rfid_count/v1/list" : {
      "get" : {
        "tags" : [ "RfidCount" ],
        "summary" : "Get list of RFID counts",
        "description" : "Retrieve list of RFID counts for a certain location.",
        "operationId" : "listRfidCounts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "location",
          "in" : "query",
          "description" : "The location to retrieve the count for",
          "required" : true,
          "type" : "string",
          "x-example" : "http://nedapretail.com/loc/26865"
        }, {
          "name" : "from_event_time",
          "in" : "query",
          "description" : "Limits the returned list to stocks with an event time after the specified date and time",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "until_event_time",
          "in" : "query",
          "description" : "Limits the returned list to stocks with an event time before the specified date and time",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StockSummary"
              }
            }
          },
          "400" : {
            "description" : "Required field missing: location."
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/rfid_count/v1/retrieve" : {
      "get" : {
        "tags" : [ "RfidCount" ],
        "summary" : "Retrieve RFID count",
        "description" : "Retrieve a RFID count based on GTIN and quantity.",
        "operationId" : "retrieveRfidCount",
        "produces" : [ "application/json", "application/csv", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" ],
        "parameters" : [ {
          "name" : "location",
          "in" : "query",
          "description" : "The location to retrieve the count for",
          "required" : true,
          "type" : "string",
          "x-example" : "http://nedapretail.com/loc/26865"
        }, {
          "name" : "gtins[]",
          "in" : "query",
          "description" : "Filter by GTIN. When omitted: returns all available GTINs, so no filtering based on GTIN is applied",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "The time of the count to retrieve (relates to the event_time of the count). When omitted: the report will contain the latest available stock information.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "include_articles",
          "in" : "query",
          "description" : "Include article information in the response.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StockResponse"
            }
          },
          "400" : {
            "description" : "Required field missing: location."
          },
          "412" : {
            "description" : "No RFID count for location."
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/rfid_stock/v1/retrieve" : {
      "get" : {
        "tags" : [ "RfidStock" ],
        "summary" : "Returns the real time stock at a certain location in unique items (SGTINs). Items are returned based on their last known bizLocation (location) as registered via the EPCIS Capture API.",
        "description" : "The response contains a list of stocks for all matching (sub)locations based on the given parameters:\n* If the stock for a store without sublocations is requested, the stocks list in the response  will contain one entry containing the stock for the entire store. \n* If a store has sublocations, the list of stocks in the response will contain an entry each   for the sublocations.\n* If a store has stock for both sublocations and store, the list of stocks in the response   contains entries for the store and the sublocations with stock.",
        "operationId" : "retrieveRfidStock",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "location",
          "in" : "query",
          "description" : "Location ID of a store or a sublocation.",
          "required" : true,
          "type" : "string",
          "x-example" : "http://nedapretail.com/loc/26865"
        }, {
          "name" : "location_types[]",
          "in" : "query",
          "description" : "Filter on sublocation type(s): only stock on sublocations of the specified type(s) will be returned. Repeat key-value for specifying multiple sublocation types.\nValid sublocation types are:\n    STOCK_ROOM, SALES_FLOOR,\n    OFFSITE_STORAGE and\n    FOREIGN.\nDefault behavior is to return stocks for all sublocation types except FOREIGN.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SgtinRfidStockResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/rfid_stock/v1/retrieve_as_gtin14" : {
      "get" : {
        "tags" : [ "RfidStock" ],
        "summary" : "Returns the real time stock at a certain location per GTIN (and not per unique item).",
        "description" : "The response contains a list of stocks for all matching sublocations based on the given parameters.\n* If the stock for a store without sublocations is requested, the stocks list in the response   will contain one entry containing the stock for the entire store. \n* If a store has sublocations, the list of stocks in the response will contain an entry each   for the sublocations.\n* If a store has stock for both sublocations and store, the list of stocks in the response   contains entries for the store and the sublocations with stock.",
        "operationId" : "retrieveRfidStockAsGtin14",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "location",
          "in" : "query",
          "description" : "Location ID of a store or a sublocation.",
          "required" : true,
          "type" : "string",
          "x-example" : "http://nedapretail.com/loc/26865"
        }, {
          "name" : "location_types[]",
          "in" : "query",
          "description" : "Filter on sublocation type(s): only stock on sublocations of the specified type(s) will be returned. Repeat key-value for specifying multiple sublocation types.\nValid sublocation types are:\n    STOCK_ROOM, SALES_FLOOR,\n    OFFSITE_STORAGE and\n    FOREIGN.\nDefault behavior is to return stocks for all sublocation types except FOREIGN.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "include_articles",
          "in" : "query",
          "description" : "Include article information in the response.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GtinRfidStockResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/rfid_stock/v1/retrieve_grouped_by_disposition" : {
      "get" : {
        "tags" : [ "RfidStock" ],
        "summary" : "Returns the real time stock at a certain location in unique items (SGTINs). Items are returned based on their last known bizLocation (location) as registered via the EPCIS Capture API.",
        "description" : "The response contains a list of stocks for all matching (sub)locations based on the given parameters:\n* If the stock for a store without sublocations is requested, the stocks list in the response  will contain one entry containing the stock for the entire store. \n* If a store has sublocations, the list of stocks in the response will contain an entry each   for the sublocations.\n* If a store has stock for both sublocations and store, the list of stocks in the response   contains entries for the store and the sublocations with stock.",
        "operationId" : "retrieveRfidStockGroupedByDisposition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "location",
          "in" : "query",
          "description" : "Location ID of a store or a sublocation.",
          "required" : true,
          "type" : "string",
          "x-example" : "http://nedapretail.com/loc/26865"
        }, {
          "name" : "location_types[]",
          "in" : "query",
          "description" : "Filter on sublocation type(s): only stock on sublocations of the specified type(s) will be returned. Repeat key-value for specifying multiple sublocation types.\nValid sublocation types are:\n    STOCK_ROOM, SALES_FLOOR,\n    OFFSITE_STORAGE and\n    FOREIGN.\nDefault behavior is to return stocks for all sublocation types except FOREIGN.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "dispositions[]",
          "in" : "query",
          "description" : "Filter on disposition(s): only stock of the specified disposition(s) will be returned.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "CONTAINER_CLOSED", "DAMAGED", "DESTROYED", "DISPOSED", "ENCODED", "EXPIRED", "INACTIVE", "IN_PROGRESS", "IN_TRANSIT", "MAYBE_STOLEN", "NO_PEDIGREE_MATCH", "NON_SELLABLE_EXPIRED", "NON_SELLABLE_DAMAGED", "NON_SELLABLE_DISPOSED", "NON_SELLABLE_NO_PEDIGREE_MATCH", "NON_SELLABLE_OTHER", "NON_SELLABLE_RECALLED", "RECALLED", "RESERVED", "RETAIL_SOLD", "RETURNED", "SELLABLE_ACCESSIBLE", "SELLABLE_NOT_ACCESSIBLE", "STOLEN", "UNKNOWN" ]
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SgtinRfidStockResponse"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/shipment/v1/capture" : {
      "post" : {
        "tags" : [ "Shipment" ],
        "summary" : "Captures and stores a shipment notice in !D Cloud.",
        "description" : "Only shipment notices are allowed. These are represented by the status INTRANSIT.",
        "operationId" : "captureShipment",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "Shipment notice",
          "description" : "Shipment notice to capture.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Shipment"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/shipment/v1/delete" : {
      "delete" : {
        "tags" : [ "Shipment" ],
        "summary" : "Deletes a shipment notice from !D Cloud.",
        "description" : "If the shipment notice was created by an aggregation event, this event will be retracted without a reason.",
        "operationId" : "deleteShipment",
        "parameters" : [ {
          "name" : "parent_id",
          "in" : "query",
          "description" : "Parent ID of a shipment.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/shipment/v1/list" : {
      "get" : {
        "tags" : [ "Shipment" ],
        "summary" : "Retrieves a list of shipment summaries.",
        "description" : "Either source or destination is required, not both. This endpoint can produce: JSON, CSV and Excel.",
        "operationId" : "listShipments",
        "produces" : [ "application/json", "application/csv", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" ],
        "parameters" : [ {
          "name" : "source",
          "in" : "query",
          "description" : "Source of a shipment.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "destination",
          "in" : "query",
          "description" : "Destination of a shipment.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status of the shipment.",
          "required" : false,
          "type" : "string",
          "default" : "INTRANSIT",
          "enum" : [ "INTRANSIT", "RECEIVED" ]
        }, {
          "name" : "last_modified_since",
          "in" : "query",
          "description" : "Find shipments that have been modified since specified time. When omitted: default is present minus one month.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ShipmentSummary"
              }
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/shipment/v1/retrieve" : {
      "get" : {
        "tags" : [ "Shipment" ],
        "summary" : "Retrieves a shipment from !D Cloud.",
        "description" : "",
        "operationId" : "retrieveShipment",
        "parameters" : [ {
          "name" : "parent_id",
          "in" : "query",
          "description" : "Parent ID of a shipment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "include_articles",
          "in" : "query",
          "description" : "When set to true the article master data will be included in the response.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Shipment"
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/workflow/v2/capture" : {
      "post" : {
        "tags" : [ "Workflow" ],
        "summary" : "Captures and stores workflow events in !D Cloud.",
        "description" : "The capture endpoint captures one workflow events at a time.",
        "operationId" : "captureWorkflowEvent",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "WorkflowEvent",
          "description" : "A workflow event to capture and store.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/WorkflowEvent"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    },
    "/workflow/v2/query" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "summary" : "Query and retrieve workflow event(s) from !D Cloud.",
        "description" : "Returns a set of workflow events that matches the criteria specified in the query parameters.",
        "operationId" : "queryWorkflowEvents",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "location",
          "in" : "query",
          "description" : "Identifies location.\nWhen omitted: return all workflow events for all locations.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Defines the type of the workflow event.\nWhen omitted: return all workflow events for all types.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "from_event_time",
          "in" : "query",
          "description" : "Defines date+time since when the counts are required.\nWhen omitted: returns all workflow events for specified location since the epoch.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "until_event_time",
          "in" : "query",
          "description" : "Defines date+time until when the counts are required.\n When omitted: returns all workflow events for specified location up until now.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WorkflowEvent"
              }
            }
          }
        },
        "security" : [ {
          "auth" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "auth" : {
      "type" : "oauth2",
      "authorizationUrl" : "https://api.nedapretail.com/login/oauth/token",
      "flow" : "implicit"
    }
  },
  "definitions" : {
    "Address" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "type" : "string"
        },
        "zipcode" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "latitude" : {
          "type" : "number",
          "format" : "double"
        },
        "longitude" : {
          "type" : "number",
          "format" : "double"
        },
        "country_code" : {
          "type" : "string"
        }
      }
    },
    "ApprovedDifferenceListCaptureRequest" : {
      "type" : "object",
      "properties" : {
        "location" : {
          "type" : "string"
        },
        "rfid_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "erp_stock_id" : {
          "type" : "string"
        },
        "approved_gtins" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ApprovedDifferenceListCreateResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        }
      }
    },
    "ApprovedDifferenceListExportResponse" : {
      "type" : "object",
      "properties" : {
        "location" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "gtins" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "articles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Article"
          }
        },
        "approved_on" : {
          "type" : "string",
          "format" : "date-time"
        },
        "approved_by" : {
          "type" : "string"
        },
        "erp_stock_id" : {
          "type" : "string"
        },
        "erp_stock_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "erp_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "erp_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rfid_stock_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "rfid_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rfid_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "absolute_difference" : {
          "type" : "integer",
          "format" : "int32"
        },
        "plus_difference" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minus_difference" : {
          "type" : "integer",
          "format" : "int32"
        },
        "export_status" : {
          "type" : "string",
          "enum" : [ "NOT_EXPORTED", "EXPORTED", "ERROR" ]
        },
        "export_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "extern_ref" : {
          "type" : "string"
        },
        "accuracy" : {
          "type" : "number",
          "format" : "double"
        },
        "approved_quantity" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    },
    "ApprovedDifferenceListResponse" : {
      "type" : "object",
      "properties" : {
        "location" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "gtins" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "articles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Article"
          }
        },
        "approved" : {
          "type" : "array",
          "items" : {
            "type" : "boolean"
          }
        },
        "approved_on" : {
          "type" : "string",
          "format" : "date-time"
        },
        "approved_by" : {
          "type" : "string"
        },
        "erp_stock_id" : {
          "type" : "string"
        },
        "erp_stock_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "erp_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "erp_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rfid_stock_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "rfid_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rfid_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "absolute_difference" : {
          "type" : "integer",
          "format" : "int32"
        },
        "plus_difference" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minus_difference" : {
          "type" : "integer",
          "format" : "int32"
        },
        "export_status" : {
          "type" : "string",
          "enum" : [ "NOT_EXPORTED", "EXPORTED", "ERROR" ]
        },
        "export_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "extern_ref" : {
          "type" : "string"
        },
        "accuracy" : {
          "type" : "number",
          "format" : "double"
        },
        "erp_stock" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "rfid_stock" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    },
    "ApprovedDifferenceListSummary" : {
      "type" : "object",
      "properties" : {
        "location" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "approved_on" : {
          "type" : "string",
          "format" : "date-time"
        },
        "approved_by" : {
          "type" : "string"
        },
        "erp_stock_id" : {
          "type" : "string"
        },
        "erp_stock_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "erp_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "erp_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rfid_stock_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "rfid_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rfid_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "absolute_difference" : {
          "type" : "integer",
          "format" : "int32"
        },
        "plus_difference" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minus_difference" : {
          "type" : "integer",
          "format" : "int32"
        },
        "export_status" : {
          "type" : "string",
          "enum" : [ "NOT_EXPORTED", "EXPORTED", "ERROR" ]
        },
        "export_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "extern_ref" : {
          "type" : "string"
        },
        "accuracy" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "Article" : {
      "type" : "object",
      "properties" : {
        "gtin" : {
          "type" : "string"
        },
        "barcodes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Barcode"
          }
        },
        "code" : {
          "type" : "string"
        },
        "brand" : {
          "type" : "string"
        },
        "season" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "option" : {
          "type" : "string"
        },
        "style" : {
          "type" : "string"
        },
        "color" : {
          "type" : "string"
        },
        "sizes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Size"
          }
        },
        "supplier" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        },
        "prices" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Price"
          }
        },
        "last_updated" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ArticleFindResponse" : {
      "type" : "object",
      "properties" : {
        "externRef" : {
          "type" : "integer",
          "format" : "int64"
        },
        "recordsTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "recordsFiltered" : {
          "type" : "integer",
          "format" : "int64"
        },
        "articles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Article"
          }
        }
      }
    },
    "Articles" : {
      "type" : "object",
      "properties" : {
        "articles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Article"
          }
        }
      }
    },
    "Barcode" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "BizTransactionElement" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "See EPCIS version 1.1"
        },
        "biz_transaction" : {
          "type" : "string",
          "description" : "See EPCIS version 1.1"
        }
      }
    },
    "CountHistory" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "event_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "counted_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "counted_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "not_counted_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "not_counted_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "counted_gtins" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "counted_quantities" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "counted_articles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Article"
          }
        },
        "not_counted_gtins" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "not_counted_quantities" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "not_counted_articles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Article"
          }
        }
      }
    },
    "DashboardKeyFigures" : {
      "type" : "object",
      "properties" : {
        "differenceListAccuracy" : {
          "type" : "number",
          "format" : "double"
        },
        "organization_id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "location_id" : {
          "type" : "string"
        },
        "absolute_difference" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Absolute difference of this difference list in number of items."
        },
        "gross_difference" : {
          "type" : "number",
          "format" : "double",
          "description" : "Gross difference of this difference list as a percentage."
        },
        "not_on_shelf_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of articles (GTINs) that are not available on shelf, but are available in a stock room."
        },
        "not_on_shelf_percentage" : {
          "type" : "number",
          "format" : "double",
          "description" : "Same as above, but as a percentage of the total number of GTINs in the store."
        },
        "store_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of items in the entire store."
        },
        "stock_ratio" : {
          "type" : "number",
          "format" : "double",
          "description" : "Percentage of items in the entire store that are in stock rooms."
        },
        "erp_stock_id" : {
          "type" : "string",
          "description" : "ID of ERP stock used to generate the summary."
        },
        "erp_stock_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Time of ERP stock used to generate the summary."
        },
        "rfid_stock_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Time of RFID stock used to generate the summary."
        },
        "erp_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of items in ERP stock"
        },
        "rfid_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of items in RFID stock"
        },
        "erp_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of GTINs in ERP stock"
        },
        "rfid_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of GTINs in RFID stock. The number of articles (GTINs) that are available in the store (including sales floors and stock rooms)."
        },
        "plus_difference" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Positive difference of this difference list in number of items (where there is more items in rfid count than in erp import)."
        },
        "minus_difference" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Negative difference of this difference list in number of items (where there is more items in erp import than in rfid count)."
        },
        "stock_rooms_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of items in all stock rooms."
        },
        "sales_floors_quantity" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of items in all sales floors."
        },
        "creation_date" : {
          "type" : "string",
          "format" : "date-time"
        },
        "difference_list_approved_on" : {
          "type" : "string",
          "format" : "date-time"
        },
        "difference_list_status" : {
          "type" : "string",
          "enum" : [ "APPROVED", "CAN_BE_APPROVED", "PERFORM_NEW_RFID_COUNT", "IMPORT_ERP_BEFORE_APPROVING", "PAYMENT_REQUIRED" ]
        },
        "shipments_in_transit" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of shipments that are in transit"
        },
        "shipments_average_received_percentage" : {
          "type" : "number",
          "format" : "float",
          "description" : "The average received percentage over the shipments in the last 10 weeks"
        }
      },
      "description" : "Dashboard summary for one store"
    },
    "DashboardListResponse" : {
      "type" : "object",
      "properties" : {
        "stores" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Location"
          }
        },
        "dashboard_key_figures" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DashboardKeyFigures"
          }
        }
      }
    },
    "DestinationElement" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "See EPCIS version 1.1"
        },
        "destination" : {
          "type" : "string",
          "description" : "See EPCIS version 1.1"
        }
      }
    },
    "DifferenceListResponse" : {
      "type" : "object",
      "properties" : {
        "gtins" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "articles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Article"
          }
        },
        "erp_stock" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "rfid_stock" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "erp_stock_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "rfid_stock_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "erp_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rfid_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "EpcisEvent" : {
      "type" : "object",
      "discriminator" : "type",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Identifier, unique per organization, that identifies the EPCIS event."
        },
        "type" : {
          "type" : "string",
          "description" : "See EPCIS version 1.1",
          "enum" : [ "object_event", "aggregation_event", "transaction_event", "quantity_event", "transformation_event" ]
        },
        "action" : {
          "type" : "string",
          "description" : "See EPCIS version 1.1",
          "enum" : [ "ADD", "OBSERVE", "DELETE" ]
        },
        "disposition" : {
          "type" : "string",
          "description" : "See EPCIS version 1.1"
        },
        "stored_id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Identifier, globally unique. Automatically created by !D Cloud when it's stored in !DCloud."
        },
        "event_id" : {
          "type" : "string",
          "description" : "(Optional) A \"globally unique identifier\" for this event.\nThis is used to mark the events as a corrective event for an event which is marked as in error by an ErrorDeclaration.\nAs this \"corrective\" event can become erroneous as well, it's not so globally unique.\nThis is specified in EPCIS-standard-1.2-draft and is not implemented in !DCloud."
        },
        "event_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date and time at which the EPCIS Capturing Applications asserts the event occurred. See EPCIS version 1.1"
        },
        "record_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date and time at which this event was recorded by an EPCIS Repository. If a client adds record_time, it will be overridden by the server. See EPCIS version 1.1"
        },
        "event_time_zone_offset" : {
          "type" : "string",
          "example" : "+01:00",
          "description" : "The time zone offset in effect at the time and place the event occurred, expressed as an offset from UTC. Values range from -14:59 to +14:59. See EPCIS version 1.1"
        },
        "biz_step" : {
          "type" : "string",
          "description" : "See EPCIS version 1.1"
        },
        "biz_location" : {
          "type" : "string",
          "description" : "See EPCIS version 1.1"
        },
        "read_point" : {
          "type" : "string",
          "description" : "See EPCIS version 1.1"
        },
        "source_list" : {
          "type" : "array",
          "description" : "See EPCIS version 1.1",
          "items" : {
            "$ref" : "#/definitions/SourceElement"
          }
        },
        "destination_list" : {
          "type" : "array",
          "description" : "See EPCIS version 1.1",
          "items" : {
            "$ref" : "#/definitions/DestinationElement"
          }
        },
        "biz_transaction_list" : {
          "type" : "array",
          "description" : "See EPCIS version 1.1",
          "items" : {
            "$ref" : "#/definitions/BizTransactionElement"
          }
        },
        "error_declaration" : {
          "description" : "See EPCIS version 1.1",
          "$ref" : "#/definitions/ErrorDeclaration"
        },
        "parent_id" : {
          "type" : "string"
        },
        "child_epcs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "child_quantity_list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QuantityElement"
          }
        },
        "ilmd" : {
          "type" : "string"
        },
        "epc_list" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "quantity_list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QuantityElement"
          }
        },
        "input_epc_list" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "output_epc_list" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "input_quantity_list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QuantityElement"
          }
        },
        "output_quantity_list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QuantityElement"
          }
        },
        "transformation_id" : {
          "type" : "string"
        }
      }
    },
    "EpcisEventContainer" : {
      "type" : "object",
      "properties" : {
        "events" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EpcisEvent"
          }
        }
      }
    },
    "EpcisQueryParameters" : {
      "type" : "object",
      "properties" : {
        "parameters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ParameterObject"
          }
        }
      }
    },
    "EpcisRetractEvent" : {
      "type" : "object",
      "properties" : {
        "storedId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "declarationTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "errorReasonId" : {
          "type" : "string",
          "enum" : [ "DID_NOT_OCCUR", "INCORRECT_DATA" ]
        }
      }
    },
    "ErpStockCreateResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        }
      }
    },
    "ErrorDeclaration" : {
      "type" : "object",
      "properties" : {
        "declaration_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "See EPCIS version 1.1"
        },
        "reason" : {
          "type" : "string",
          "description" : "See EPCIS version 1.1"
        },
        "corrective_event_ids" : {
          "type" : "array",
          "description" : "See EPCIS version 1.1",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "A ErrorDeclaration is a structure that identifies a prior EPCISEvent is in error."
    },
    "GtinQuantity" : {
      "type" : "object",
      "properties" : {
        "gtin" : {
          "type" : "string"
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "exclude" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "GtinRfidStock" : {
      "type" : "object",
      "properties" : {
        "location" : {
          "type" : "string"
        },
        "time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gtins" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "quantities" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "articles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Article"
          }
        },
        "gtin_quantity" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "GtinRfidStockResponse" : {
      "type" : "object",
      "properties" : {
        "stocks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GtinRfidStock"
          }
        }
      }
    },
    "Location" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "COUNTRY", "GROUP", "SITE", "LOCATION", "LOCATION_INTERNAL", "LOCATION_EXTERNAL" ]
        },
        "subtype" : {
          "type" : "string",
          "enum" : [ "DEMO", "DISTRIBUTION_CENTRE", "DIY_SHOP", "ELECTRONICS", "FASHION", "HEALTH_BEAUTY", "OFFICE", "PRINT_SHOP", "PRODUCTION_FACILITY", "SHOPPING_MALL", "SPORT", "SUPERMARKET", "OTHER", "GOODS_RECEIVING_AREA", "STOCK_ROOM", "SALES_FLOOR", "OFFSITE_STORAGE" ]
        },
        "name" : {
          "type" : "string"
        },
        "address" : {
          "$ref" : "#/definitions/Address"
        },
        "children" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Location"
          }
        },
        "parent_id" : {
          "type" : "string"
        },
        "store_code" : {
          "type" : "string"
        }
      }
    },
    "Movement" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "to" : {
          "type" : "string"
        },
        "from" : {
          "type" : "string"
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "unregistered" : {
          "type" : "boolean",
          "default" : false
        },
        "gtins" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "quantities" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "articles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Article"
          }
        },
        "event_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "gtin_quantity" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "NotOnShelfResponse" : {
      "type" : "object",
      "properties" : {
        "rfidStockTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "notOnShelfGtinQuantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rfidGtinQuantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "notOnShelfPercentage" : {
          "type" : "number",
          "format" : "double"
        },
        "gtins" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "salesFloorStock" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "stockRoomLocations" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "stockRoomStock" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "articles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Article"
          }
        }
      }
    },
    "ParameterObject" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "values" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Price" : {
      "type" : "object",
      "properties" : {
        "currency" : {
          "type" : "string"
        },
        "region" : {
          "type" : "string"
        },
        "amount" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "QuantityElement" : {
      "type" : "object",
      "properties" : {
        "quantity" : {
          "type" : "number",
          "description" : "See EPCIS version 1.1"
        },
        "uom" : {
          "type" : "string",
          "description" : "See EPCIS version 1.1"
        },
        "epc_class" : {
          "type" : "string",
          "description" : "See EPCIS version 1.1"
        }
      },
      "description" : "A QuantityElement is a structure that identifies a specific quantity of objects identified by a specific class-level identifier."
    },
    "QuantityResponse" : {
      "type" : "object",
      "properties" : {
        "quantity" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "RfidCountCreateResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        }
      }
    },
    "SgtinRfidStock" : {
      "type" : "object",
      "properties" : {
        "location" : {
          "type" : "string"
        },
        "time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sgtins" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "disposition" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "CONTAINER_CLOSED", "DAMAGED", "DESTROYED", "DISPOSED", "ENCODED", "EXPIRED", "INACTIVE", "IN_PROGRESS", "IN_TRANSIT", "MAYBE_STOLEN", "NO_PEDIGREE_MATCH", "NON_SELLABLE_EXPIRED", "NON_SELLABLE_DAMAGED", "NON_SELLABLE_DISPOSED", "NON_SELLABLE_NO_PEDIGREE_MATCH", "NON_SELLABLE_OTHER", "NON_SELLABLE_RECALLED", "RECALLED", "RESERVED", "RETAIL_SOLD", "RETURNED", "SELLABLE_ACCESSIBLE", "SELLABLE_NOT_ACCESSIBLE", "STOLEN", "UNKNOWN" ]
        }
      }
    },
    "SgtinRfidStockResponse" : {
      "type" : "object",
      "properties" : {
        "stocks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SgtinRfidStock"
          }
        }
      }
    },
    "Shipment" : {
      "type" : "object",
      "properties" : {
        "parent_id" : {
          "type" : "string"
        },
        "extern_ref" : {
          "type" : "string"
        },
        "source" : {
          "type" : "string"
        },
        "destination" : {
          "type" : "string"
        },
        "created_at" : {
          "type" : "string",
          "format" : "date-time"
        },
        "last_modified_at" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "INTRANSIT", "RECEIVED" ]
        },
        "sent_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "received_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "received_percentage" : {
          "type" : "number",
          "format" : "float"
        },
        "gtins" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "sent_quantities" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "received_quantities" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "articles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Article"
          }
        }
      }
    },
    "ShipmentSummary" : {
      "type" : "object",
      "properties" : {
        "parent_id" : {
          "type" : "string"
        },
        "extern_ref" : {
          "type" : "string"
        },
        "source" : {
          "type" : "string"
        },
        "destination" : {
          "type" : "string"
        },
        "created_at" : {
          "type" : "string",
          "format" : "date-time"
        },
        "last_modified_at" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "INTRANSIT", "RECEIVED" ]
        },
        "sent_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "received_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "received_percentage" : {
          "type" : "number",
          "format" : "float"
        }
      }
    },
    "Size" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "region" : {
          "type" : "string"
        }
      }
    },
    "SourceElement" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "See EPCIS version 1.1"
        },
        "source" : {
          "type" : "string",
          "description" : "See EPCIS version 1.1"
        }
      }
    },
    "Stock" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "ERP", "RFID_COUNT", "REALTIME_SNAPSHOT" ]
        },
        "event_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "start_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "extern_ref" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ACCEPTED", "VALIDATING" ]
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "excluded_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gtin_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "excluded_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "in_use" : {
          "type" : "boolean",
          "default" : false
        },
        "client_ids" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "is_complete" : {
          "type" : "boolean",
          "default" : false
        },
        "quantity_list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GtinQuantity"
          }
        }
      }
    },
    "StockResponse" : {
      "type" : "object",
      "properties" : {
        "generated" : {
          "type" : "string",
          "format" : "date-time"
        },
        "gtins" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "locations" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "quantities" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "articles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Article"
          }
        },
        "rfid_stock_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "rfid_stock_start_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "stock_rooms_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sales_floors_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "store_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "stock_ratio" : {
          "type" : "number",
          "format" : "double"
        },
        "client_ids" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "StockSummary" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "ERP", "RFID_COUNT", "REALTIME_SNAPSHOT" ]
        },
        "event_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "start_time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "extern_ref" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ACCEPTED", "VALIDATING" ]
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "excluded_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gtin_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "excluded_gtin_quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "in_use" : {
          "type" : "boolean",
          "default" : false
        },
        "client_ids" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "is_complete" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "WorkflowEvent" : {
      "type" : "object",
      "required" : [ "event_time", "location", "message_ids", "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Type of the workflow",
          "enum" : [ "cycle_count_started", "cycle_count_finished", "partial_count_finished", "in-store_replenishment_started" ]
        },
        "location" : {
          "type" : "string",
          "description" : "The location for which the stock is defined."
        },
        "event_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Client-side date+time of registering that the count was finished.\nThis is not the moment of sending the workflow event nor is it the moment when the last EPC was observed."
        },
        "start_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Optional. This is moment when the first EPC was observed.\n"
        },
        "epc_count" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The total number of EPCs that were counted in the referenced message_ids."
        },
        "message_ids" : {
          "type" : "array",
          "description" : "Array of EPCIS event message IDs. These events contain the actual EPCs that were observed in this count.",
          "items" : {
            "type" : "string"
          }
        },
        "client_id" : {
          "type" : "string"
        }
      }
    },
    "Organization" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "enum" : [ "ORGANIZATION", "BUSINESS_PARTNER" ]
        },
        "name" : {
          "type" : "string"
        },
        "organization_id" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Organizations" : {
      "type" : "object",
      "properties" : {
        "own" : {
          "$ref" : "#/definitions/Organization"
        },
        "linked" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Organization"
          }
        }
      }
    },
    "Setting" : {
      "type" : "object",
      "properties" : {
        "settings" : {
          "type" : "object",
          "description" : "Series of key-value pairs representing the actual settings.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "version" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The version of the settings: a higher number means newer. Use this to check if your local cache of the settings is outdated."
        },
        "target_type" : {
          "type" : "string",
          "description" : "The type of target in the organizational structure",
          "enum" : [ "CustomerOrganization", "Division", "Store", "Sublocation" ]
        },
        "target_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The numeric identifier for the target."
        },
        "target_name" : {
          "type" : "string",
          "description" : "Human readable name of the target."
        },
        "location_id" : {
          "type" : "string",
          "description" : "If present, the location_id of the target."
        }
      }
    }
  }
}